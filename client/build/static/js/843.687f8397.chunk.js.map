{"version":3,"file":"static/js/843.687f8397.chunk.js","mappings":"sVAuCe,SAASA,IAEtBC,EAAAA,GAAAA,SAAAA,iBAAiC,EAGjC,OAAiCC,EAAAA,EAAAA,YAAWC,EAAAA,WAArCC,EAAQ,EAARA,SACP,GAD4B,EAAXC,aACiBH,EAAAA,EAAAA,YAAWI,EAAAA,WAArCC,EAAQ,EAARA,SACR,GAD6B,EAAXC,aACWC,EAAAA,EAAAA,OAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SA0BhB,OACE,UAAC,KAAG,YACF,UAAC,KAAI,CACHC,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BC,OAAOD,EAAAA,EAAAA,IAAkB,WAAY,SACrCE,KAAM,OACNC,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,GACZE,aAAc,EACdC,YAAa,QACbC,aAAaR,EAAAA,EAAAA,IAAkB,WAAY,YAC3CS,EAAG,EACHC,OAAO,KACPC,MAAO,SAAS,WAEjB,SAAC,KAAI,CACFC,KAAM,CAAER,KAAM,EAAGS,GAAI,QACrBC,GAAI,CAAEV,MAAO,GACbW,QAAS,CAAEX,KAAM,OAAQS,GAAI,QAAS,UACtC,SAAC,KAAU,CACTG,QAASlB,EACTmB,WAAY,EACZC,KACErB,GAAS,SAAC,KAAS,CAACsB,EAAG,EAAGC,EAAG,KAAQ,SAAC,KAAa,CAACD,EAAG,EAAGC,EAAG,IAE/DC,QAAS,QACT,aAAY,yBAGhB,UAAC,KAAI,CAACT,KAAM,CAAER,KAAM,GAAKkB,QAAS,CAAElB,KAAM,SAAUS,GAAI,SAAU,WAChE,cAAGU,KAAK,QAAO,UACf,SAAC,KAAI,CACHC,WAAWC,EAAAA,EAAAA,IAAmB,CAAErB,KAAM,SAAUS,GAAI,SACpDa,WAAY,UACZC,WAAY,MACZ1B,OAAOD,EAAAA,EAAAA,IAAkB,WAAY,YAAY,oCAMnD,UAAC,KAAI,CAACe,QAAS,CAAEX,KAAM,OAAQS,GAAI,QAAUD,KAAM,CAACR,KAAO,GAAIU,GAAI,GAAIQ,QAAQ,WAAWM,eAAgB,WAAW,WACnH,SAACC,EAAU,KACX,SAAC,KAAI,CAACD,eAAe,SAASE,WAAW,kBAK7C,SAAC,KAAK,CACJlB,KAAM,CAAER,KAAM,EAAGS,GAAI,GACrBS,QAAS,WACTS,UAAW,MACXC,QAAS,EACTf,WAAY,EAAE,UAOf,UAAC,KAAI,YACE,SAAC,KAAU,CACTgB,GAAIC,EAAAA,GACJC,QAAS,OACTd,QAAS,OACTe,OAAQ,UACRC,KAAM,EAAE,UACV,SAAC,KAAU,CAAC,aAAW,aAAahB,QAAS,QAAQ,UACnD,SAAC,KAAY,SAGf,UAAC,KAAQ,CAACS,WAAY,SAAS,WAC7B,mBACA,SAAC,KAAM,WACL,SAAC,KAAM,CACLQ,KAAM,KACNC,IAAK,0DAGT,mBACA,SAAC,KAAM,WACL,UAAC,KAAI,CAACC,cAAc,SAAQ,WAC1B,UAAC,KAAI,YACH,SAAC,KAAI,UAAEjD,KAAgB,sBAEzB,SAAC,KAAI,CAACqC,eAAe,SAAQ,UAC3B,SAAC,KAAI,UAAElC,YAIb,mBACA,SAAC,IAAW,KACZ,wBACA,SAAC,KAAQ,iCAEK,UAAbA,GACD,cAAG6B,KAAK,mBAAkB,UAC1B,SAAC,KAAQ,0BAGT,MAEA,cAAGP,QA9GJ,WACb5B,EAAAA,GAAAA,IAAU,+DAA+DqD,MAAK,WAC9E,IAhBAC,EAAAA,GAAAA,QAAc,cAAe,CAC3BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAUTC,YAAW,kBAAMC,OAAOC,SAASC,OAAO,0CAA0C,GAAE,IACtF,EAyGmC,UACnB,SAAC,KAAQ,mCAOrB,SAAC,KAAQ,CAACC,GAAI3D,EAAQ4D,gBAAc,YAClC,SAACC,EAAS,QAIlB,CAEA,IAAM7B,EAAa,WACjB,IAAM8B,GAAY3D,EAAAA,EAAAA,IAAkB,WAAY,YAC1C4D,GAAiB5D,EAAAA,EAAAA,IAAkB,WAAY,SAC/C6D,GAAwB7D,EAAAA,EAAAA,IAAkB,QAAS,YAEzD,OACE,SAAC,KAAK,CAAC+B,UAAW,MAAOC,QAAS,GAAG,SAClC8B,EAAUC,KAAI,SAACC,GAAO,aACrB,SAAC,KAAG,WACF,UAAC,KAAO,CAACC,QAAS,QAASC,UAAW,eAAe,WACnD,SAAC,KAAc,WACb,SAAC,KAAI,CACHzD,EAAG,EACHc,KAAkB,QAAd,EAAEyC,EAAQzC,YAAI,QAAI,IACtB4C,SAAU,KACVxC,WAAY,IACZ1B,MAAO0D,EACPrD,aAAa,MACb8D,kBAAmB,WACnBC,OAAQ,CACNC,eAAgB,OAChBrE,MAAO2D,GACP,SACDI,EAAQO,UAIZP,EAAQQ,WACP,SAAC,KAAc,CACbC,OAAQ,EACRC,UAAW,KACX3E,GAAI8D,EACJpD,EAAG,EACH0B,QAAS,KACTE,KAAM,KAAK,UACX,SAAC,KAAK,UACH2B,EAAQQ,SAAST,KAAI,SAACY,GAAK,OAC1B,SAACC,GAAa,UAAuBD,GAAjBA,EAAMJ,MAAoB,YA7BhDP,EAAQO,MAmCZ,KAId,EAEMK,EAAgB,SAAH,GAA4C,IAAtCL,EAAK,EAALA,MAAOhD,EAAI,EAAJA,KAAMsD,EAAQ,EAARA,SACpC,OACE,SAAC,KAAI,CACHtD,KAAMA,EACNuD,KAAM,QACN/D,QAAS,QACTN,EAAG,EACH0B,QAAS,KAAK,UAEd,UAAC,KAAK,CAACJ,UAAW,MAAOpB,MAAO,SAAS,WACvC,UAAC,KAAG,YACF,SAAC,KAAI,CACHoE,WAAY,eACZpD,WAAY,IAAI,SACf4C,KAEH,SAAC,KAAI,CAACJ,SAAU,KAAK,SAAEU,QAEzB,SAAC,KAAI,CACHE,WAAY,eACZC,UAAW,oBACXC,QAAS,EACTC,YAAa,CAAED,QAAS,OAAQD,UAAW,iBAC3C1D,QAAS,WACTX,MAAO,SACPC,KAAM,EAAE,UACR,SAAC,KAAI,CAACX,MAAO,WAAYkB,EAAG,EAAGC,EAAG,EAAGa,GAAIkD,EAAAA,WAKnD,EAEMzB,EAAY,WAChB,OACE,SAAC,KAAK,CACJ3D,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BS,EAAG,EACHM,QAAS,CAAEF,GAAI,QAAS,SACvBiD,EAAUC,KAAI,SAACC,GAAO,OACrB,SAACoB,GAAa,UAAyBpB,GAAnBA,EAAQO,MAAsB,KAI1D,EAEMa,EAAgB,SAAH,GAA4C,IAAtCb,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUjD,EAAI,EAAJA,KACxC,GAA6B3B,EAAAA,EAAAA,MAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAEhB,OACE,UAAC,KAAK,CAACkC,QAAS,EAAGhB,QAASwD,GAAY1E,EAAS,WAC/C,UAAC,KAAI,CACHK,GAAI,EACJ8B,GAAIoD,EAAAA,GACJ9D,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQ,IACdD,QAAS,gBACTX,MAAO,SACP0D,OAAQ,CACNC,eAAgB,QAChB,WACF,SAAC,KAAI,CACH3C,WAAY,IACZ1B,OAAOD,EAAAA,EAAAA,IAAkB,WAAY,YAAY,SAChDuE,IAEFC,IACC,SAAC,KAAI,CACHvC,GAAIqD,EAAAA,GACJP,WAAY,uBACZC,UAAWnF,EAAS,iBAAmB,GACvCsB,EAAG,EACHC,EAAG,QAKT,SAAC,KAAQ,CAACoC,GAAI3D,EAAQ4D,gBAAc,EAAC8B,MAAO,CAAEC,UAAW,eAAgB,UACvE,SAAC,KAAK,CACJC,GAAI,EACJC,GAAI,EACJC,WAAY,EACZpF,YAAa,QACbC,aAAaR,EAAAA,EAAAA,IAAkB,WAAY,YAC3CW,MAAO,QAAQ,SACd6D,GACCA,EAAST,KAAI,SAACY,GAAK,OACjB,SAAC,KAAI,CAAmBxE,GAAI,EAAGoB,KAAMoD,EAAMpD,KAAK,SAC7CoD,EAAMJ,OADEI,EAAMJ,MAEV,UAMrB,EASMT,EAA4B,CAChC,CACES,MAAO,eACPC,SAAU,CACR,CACED,MAAO,sBACPM,SAAU,sBACVtD,KAAM,wBAER,CACEgD,MAAO,WACPM,SAAU,WACVtD,KAAM,KAER,CACEgD,MAAO,gBACPM,SAAU,gBACVtD,KAAM,KAER,CACEgD,MAAO,sBACPM,SAAU,sBACVtD,KAAM,KAER,CACEgD,MAAO,kBACPM,SAAU,2BACVtD,KAAM,aAER,CACEgD,MAAO,qBACPM,SAAU,qBACVtD,KAAM,kBAKZ,CACEgD,MAAO,gBACPC,SAAU,CACR,CACED,MAAO,YACPM,SAAU,6BACVtD,KAAM,aAER,CACEgD,MAAO,eACPM,SAAU,sCACVtD,KAAM,qBAER,CACEgD,MAAO,cACPM,SAAU,sCACVtD,KAAM,OAIZ,CACEgD,MAAO,cACPC,SAAU,CACR,CACED,MAAO,wBACPM,SAAU,6BACVtD,KAAM,SAER,CACEgD,MAAO,uBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,yBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,iCACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,gBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,mBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,cACPM,SAAU,sCACVtD,KAAM,O,8ICtQd,UA9IgB,WACd,OACE,iCACA,SAAC,IAAM,KACP,SAAC,KAAS,CAACqE,UAAU,QAAQ7F,GAAG,UAAU8F,KAAK,OAAOJ,GAAI,EAAGK,eAAa,EAACC,SAAS,SAAQ,UAC1F,SAAC,KAAI,WACH,SAAC,KAAG,CACFhG,GAAG,UACHE,MAAM,QACN+F,aAAa,KACbC,EAAG,CAAEC,GAAI,EAAGrF,GAAI,GAAIsF,GAAI,IACxB1F,EAAG,CAAEyF,GAAI,EAAGrF,GAAI,EAAGsF,GAAI,IAAK,UAC5B,SAAC,KAAG,CAAC1F,EAAG,EAAE,UACR,UAAC,KAAI,CAACuB,QAAS,CAAE5B,KAAM,GAAI8F,GAAI,EAAGrF,GAAI,EAAGsF,GAAI,IAAK,WAChD,SAAC,KAAQ,WACP,UAAC,KAAG,YACF,SAAC,KAAO,uBACR,SAAC,KAAI,CAACV,GAAI,CAAES,GAAI,EAAGrF,GAAI,EAAGsF,GAAI,GAAKlG,MAAM,WAAU,gDAGnD,SAAC,KAAG,CAACE,GAAI,CAAEC,KAAM,EAAG8F,GAAI,EAAGrF,GAAI,EAAGsF,GAAI,IAAK,UACzC,UAAC,KAAM,CAACT,GAAI,EAAG1D,QAAS,EAAGF,WAAW,aAAY,WAChD,SAAC,KAAM,CACLQ,KAAK,KACL8D,OAAO,OACPC,MAAM,QACNhF,QAAQ,QACRpB,MAAM,UACNoE,OAAQ,CAAEI,OAAQ,qBAClB6B,UAAU,SAAC,MAAO,CAACrG,MAAM,UAAUqC,KAAK,SAAU,4BAGpD,SAAC,KAAM,CACLA,KAAK,KACL8D,OAAO,OACPC,MAAM,QACNhF,QAAQ,QACRpB,MAAM,UACNoE,OAAQ,CAAEI,OAAQ,qBAClB6B,UAAU,SAAC,MAAO,CAACrG,MAAM,UAAUqC,KAAK,SAAU,yCAGpD,SAAC,KAAM,CACLA,KAAK,KACL8D,OAAO,OACPC,MAAM,QACNhF,QAAQ,QACRpB,MAAM,UACNoE,OAAQ,CAAEI,OAAQ,qBAClB6B,UAAU,SAAC,MAAY,CAACrG,MAAM,UAAUqC,KAAK,SAAU,iCAK7D,UAAC,KAAM,CACLmD,GAAI,CAAEU,GAAI,GAAItF,GAAI,IAClBmB,QAAS,EACT3B,GAAI,EACJyB,WAAW,aAAY,WACvB,SAAC,KAAU,CACT,aAAW,WACXT,QAAQ,QACRiB,KAAK,KACLiE,SAAS,EACTlC,OAAQ,CAAEtE,GAAI,WACdmB,MAAM,SAAC,MAAU,CAACoB,KAAK,YAEzB,SAAC,KAAU,CACT,aAAW,SACXjB,QAAQ,QACRiB,KAAK,KACLiE,SAAS,EACTlC,OAAQ,CAAEtE,GAAI,WACdmB,MAAM,SAAC,MAAQ,CAACoB,KAAK,YAEvB,SAAC,KAAU,CACT,aAAW,UACXjB,QAAQ,QACRiB,KAAK,KACLiE,SAAS,EACTlC,OAAQ,CAAEtE,GAAI,WACdmB,MAAM,SAAC,MAAS,CAACoB,KAAK,oBAK9B,SAAC,KAAQ,WACP,SAAC,KAAG,CAACvC,GAAG,QAAQiG,aAAa,KAAI,UAC/B,SAAC,KAAG,CAACC,EAAG,EAAGhG,MAAM,UAAS,UACxB,UAAC,KAAM,CAAC+B,QAAS,EAAE,WACjB,UAAC,KAAW,CAACwE,GAAG,OAAM,WACpB,SAAC,KAAS,yBACV,UAAC,KAAU,CAAChG,YAAY,UAAS,WAC/B,SAAC,KAAgB,CACfiG,cAAc,OACdjC,UAAU,SAAC,MAAQ,CAACvE,MAAM,gBAE5B,SAAC,KAAK,CAACyG,KAAK,OAAOpE,KAAK,cAG5B,UAAC,KAAW,CAACkE,GAAG,OAAM,WACpB,SAAC,KAAS,oBACV,UAAC,KAAU,CAAChG,YAAY,UAAS,WAC/B,SAAC,KAAgB,CACfiG,cAAc,OACdjC,UAAU,SAAC,MAAc,CAACvE,MAAM,gBAElC,SAAC,KAAK,CAACyG,KAAK,OAAOpE,KAAK,cAG5B,UAAC,KAAW,CAACkE,GAAG,OAAM,WACpB,SAAC,KAAS,uBACV,SAAC,IAAQ,CACPhG,YAAY,WACZ6D,OAAQ,CACN2B,aAAc,YAEhBW,YAAY,gBAGhB,SAAC,KAAW,CAACH,GAAG,OAAOI,MAAM,QAAO,UAClC,SAAC,KAAM,CACLvF,QAAQ,QACRtB,GAAG,UACHE,MAAM,QACNoE,OAAQ,CAAC,EAAE,kDAerC,C","sources":["Component/Appbar/Appbar.tsx","Component/Contact/Contact.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"https://bsi-portal-supplier.netlify.app\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React from 'react';\r\nimport {\r\n    Container,\r\n    Flex,\r\n    Box,\r\n    Heading,\r\n    Text,\r\n    IconButton,\r\n    Button,\r\n    VStack,\r\n    HStack,\r\n    Wrap,\r\n    WrapItem,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    InputGroup,\r\n    InputLeftElement,\r\n    Textarea,\r\n} from '@chakra-ui/react';\r\nimport {\r\n    MdPhone,\r\n    MdEmail,\r\n    MdLocationOn,\r\n        MdFacebook,\r\n    MdOutlineEmail,\r\n} from 'react-icons/md';\r\nimport { BsGithub, BsDiscord, BsPerson } from 'react-icons/bs';\r\nimport Appbar from \"../Appbar/Appbar.tsx\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n    <Appbar />\r\n    <Container minHeight=\"100vh\" bg=\"#9DC4FB\" maxW=\"full\" mt={0} centerContent overflow=\"hidden\">\r\n      <Flex>\r\n        <Box\r\n          bg=\"#02054B\"\r\n          color=\"white\"\r\n          borderRadius=\"lg\"\r\n          m={{ sm: 4, md: 16, lg: 10 }}\r\n          p={{ sm: 5, md: 5, lg: 16 }}>\r\n          <Box p={4}>\r\n            <Wrap spacing={{ base: 20, sm: 3, md: 5, lg: 20 }}>\r\n              <WrapItem>\r\n                <Box>\r\n                  <Heading>Contact</Heading>\r\n                  <Text mt={{ sm: 3, md: 3, lg: 5 }} color=\"gray.500\">\r\n                    Fill up the form below to contact\r\n                  </Text>\r\n                  <Box py={{ base: 5, sm: 5, md: 8, lg: 10 }}>\r\n                    <VStack pl={0} spacing={3} alignItems=\"flex-start\">\r\n                      <Button\r\n                        size=\"md\"\r\n                        height=\"48px\"\r\n                        width=\"250px\"\r\n                        variant=\"ghost\"\r\n                        color=\"#DCE2FF\"\r\n                        _hover={{ border: '2px solid #1C6FEB' }}\r\n                        leftIcon={<MdPhone color=\"#1970F1\" size=\"20px\" />}>\r\n                        +91-988888888\r\n                      </Button>\r\n                      <Button\r\n                        size=\"md\"\r\n                        height=\"48px\"\r\n                        width=\"250px\"\r\n                        variant=\"ghost\"\r\n                        color=\"#DCE2FF\"\r\n                        _hover={{ border: '2px solid #1C6FEB' }}\r\n                        leftIcon={<MdEmail color=\"#1970F1\" size=\"20px\" />}>\r\n                        bsi.procurenment@bsi.co.id\r\n                      </Button>\r\n                      <Button\r\n                        size=\"md\"\r\n                        height=\"48px\"\r\n                        width=\"250px\"\r\n                        variant=\"ghost\"\r\n                        color=\"#DCE2FF\"\r\n                        _hover={{ border: '2px solid #1C6FEB' }}\r\n                        leftIcon={<MdLocationOn color=\"#1970F1\" size=\"20px\" />}>\r\n                        Jakarta Timur\r\n                      </Button>\r\n                    </VStack>\r\n                  </Box>\r\n                  <HStack\r\n                    mt={{ lg: 10, md: 10 }}\r\n                    spacing={5}\r\n                    px={5}\r\n                    alignItems=\"flex-start\">\r\n                    <IconButton\r\n                      aria-label=\"facebook\"\r\n                      variant=\"ghost\"\r\n                      size=\"lg\"\r\n                      isRound={true}\r\n                      _hover={{ bg: '#0D74FF' }}\r\n                      icon={<MdFacebook size=\"28px\" />}\r\n                    />\r\n                    <IconButton\r\n                      aria-label=\"github\"\r\n                      variant=\"ghost\"\r\n                      size=\"lg\"\r\n                      isRound={true}\r\n                      _hover={{ bg: '#0D74FF' }}\r\n                      icon={<BsGithub size=\"28px\" />}\r\n                    />\r\n                    <IconButton\r\n                      aria-label=\"discord\"\r\n                      variant=\"ghost\"\r\n                      size=\"lg\"\r\n                      isRound={true}\r\n                      _hover={{ bg: '#0D74FF' }}\r\n                      icon={<BsDiscord size=\"28px\" />}\r\n                    />\r\n                  </HStack>\r\n                </Box>\r\n              </WrapItem>\r\n              <WrapItem>\r\n                <Box bg=\"white\" borderRadius=\"lg\">\r\n                  <Box m={8} color=\"#0B0E3F\">\r\n                    <VStack spacing={5}>\r\n                      <FormControl id=\"name\">\r\n                        <FormLabel>Your Name</FormLabel>\r\n                        <InputGroup borderColor=\"#E0E1E7\">\r\n                          <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            children={<BsPerson color=\"gray.800\" />}\r\n                          />\r\n                          <Input type=\"text\" size=\"md\" />\r\n                        </InputGroup>\r\n                      </FormControl>\r\n                      <FormControl id=\"name\">\r\n                        <FormLabel>Mail</FormLabel>\r\n                        <InputGroup borderColor=\"#E0E1E7\">\r\n                          <InputLeftElement\r\n                            pointerEvents=\"none\"\r\n                            children={<MdOutlineEmail color=\"gray.800\" />}\r\n                          />\r\n                          <Input type=\"text\" size=\"md\" />\r\n                        </InputGroup>\r\n                      </FormControl>\r\n                      <FormControl id=\"name\">\r\n                        <FormLabel>Message</FormLabel>\r\n                        <Textarea\r\n                          borderColor=\"gray.300\"\r\n                          _hover={{\r\n                            borderRadius: 'gray.300',\r\n                          }}\r\n                          placeholder=\"message\"\r\n                        />\r\n                      </FormControl>\r\n                      <FormControl id=\"name\" float=\"right\">\r\n                        <Button\r\n                          variant=\"solid\"\r\n                          bg=\"#0D74FF\"\r\n                          color=\"white\"\r\n                          _hover={{}}>\r\n                          Send Message\r\n                        </Button>\r\n                      </FormControl>\r\n                    </VStack>\r\n                  </Box>\r\n                </Box>\r\n              </WrapItem>\r\n            </Wrap>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","minHeight","maxW","centerContent","overflow","borderRadius","m","sm","lg","height","width","leftIcon","isRound","id","pointerEvents","type","placeholder","float"],"sourceRoot":""}