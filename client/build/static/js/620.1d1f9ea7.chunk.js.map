{"version":3,"file":"static/js/620.1d1f9ea7.chunk.js","mappings":"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","sources":["Component/Appbar/Appbar.tsx","../node_modules/@chakra-ui/table/dist/index.esm.js","Component/Admin/OutsourcingHomeAdmin.js","Component/OutsourcingPortal/Home.js","Helper/OutsourcingPortalProvider.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"http://localhost:3000\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/table.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ React.createElement(TableStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.table, {\n    ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className),\n    ...tableProps\n  }));\n});\nTable.displayName = \"Table\";\n\n// src/table-container.tsx\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\nvar TableContainer = forwardRef2((props, ref) => {\n  const { overflow, overflowX, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    className: cx(\"chakra-table__container\", className),\n    ...rest,\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: overflow ?? overflowX ?? \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  });\n});\n\n// src/table-caption.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar TableCaption = forwardRef3((props, ref) => {\n  const { placement = \"bottom\", ...rest } = props;\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra3.caption, {\n    ...rest,\n    ref,\n    __css: {\n      ...styles.caption,\n      captionSide: placement\n    }\n  });\n});\nTableCaption.displayName = \"TableCaption\";\n\n// src/thead.tsx\nimport { chakra as chakra4, forwardRef as forwardRef4 } from \"@chakra-ui/system\";\nvar Thead = forwardRef4((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra4.thead, {\n    ...props,\n    ref,\n    __css: styles.thead\n  });\n});\n\n// src/tbody.tsx\nimport { chakra as chakra5, forwardRef as forwardRef5 } from \"@chakra-ui/system\";\nvar Tbody = forwardRef5((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra5.tbody, {\n    ...props,\n    ref,\n    __css: styles.tbody\n  });\n});\n\n// src/tfooter.tsx\nimport { chakra as chakra6, forwardRef as forwardRef6 } from \"@chakra-ui/system\";\nvar Tfoot = forwardRef6((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra6.tfoot, {\n    ...props,\n    ref,\n    __css: styles.tfoot\n  });\n});\n\n// src/th.tsx\nimport { chakra as chakra7, forwardRef as forwardRef7 } from \"@chakra-ui/system\";\nvar Th = forwardRef7(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra7.th, {\n    ...rest,\n    ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  });\n});\n\n// src/tr.tsx\nimport { chakra as chakra8, forwardRef as forwardRef8 } from \"@chakra-ui/system\";\nvar Tr = forwardRef8((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra8.tr, {\n    ...props,\n    ref,\n    __css: styles.tr\n  });\n});\n\n// src/td.tsx\nimport { chakra as chakra9, forwardRef as forwardRef9 } from \"@chakra-ui/system\";\nvar Td = forwardRef9(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra9.td, {\n    ...rest,\n    ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  });\n});\nexport {\n  Table,\n  TableCaption,\n  TableContainer,\n  Tbody,\n  Td,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useTableStyles\n};\n","import React, { useState, useContext, useEffect} from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport Appbar from '../Appbar/Appbar.tsx';\r\nimport {\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableContainer,\r\n  HStack,\r\n  Flex,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport { SearchIcon } from '@chakra-ui/icons';\r\nimport '../PayG/Payg.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../OutsourcingPortal/Home.css'\r\n\r\n\r\n\r\nconst OutsourcingHomeAdmin = () => {\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const { emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const [ search, setSearch ] = useState(\"\");\r\n  const [ isFetching, setIsFetching ] = useState(true);\r\n  \r\n\r\n  const [ dataOutsourcing, setDataOutsourcing ] = useState([]);\r\n\r\n\r\n  const deleteDataOutsourcing = (id) => {\r\n    Axios.delete(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/delete/${id}`).then(() => {\r\n      setDataOutsourcing(dataOutsourcing.filter((val) => {\r\n        return val._id !== id\r\n      }))\r\n  });     \r\n  }\r\n\r\n  const getAllOutsourcingData = () => {\r\n    Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/all`).then((response) => {\r\n      setDataOutsourcing(response.data);\r\n      setIsFetching(false);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    async function userExpire2 () {\r\n      const request = await  Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/login`)\r\n      .then((response)=> {\r\n        if(response.data.loggedIn === true) {\r\n          setEmailLog(response.data.email);\r\n          setRoleUser(response.data.role);\r\n        } else {\r\n          navigate(\"/\", {replace : true})\r\n        }\r\n      }, {withCredentials : true});\r\n      return request;\r\n    }\r\n    userExpire2();\r\n   }, [emailLog])\r\n\r\n   useEffect(() => {\r\n    getAllOutsourcingData()\r\n   }, [])\r\n\r\n  return (\r\n     <div>\r\n        <ToastContainer />\r\n        <Appbar />\r\n        <h1 style={{display : \"flex\", justifyContent : \"center\", marginTop : \"35px\", fontSize : \"20px\"}}>Welcome to Outsourcing Portal</h1>\r\n        <div style={{display : \"flex\", justifyContent : \"center\", marginTop : \"35px\", flexDirection : \"column\"}}>\r\n          <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}>\r\n          </div>\r\n          { isFetching === false ? \r\n          <>\r\n          { dataOutsourcing.length <= 0 ? \r\n          null\r\n          :\r\n           <Flex className='flexTable'>\r\n              <Flex marginTop=\"-15px\" justifyContent=\"center\" alignItems=\"center\">\r\n                <InputGroup>\r\n                <InputLeftElement\r\n                    pointerEvents='none'\r\n                    children={<SearchIcon color='gray.300' />}\r\n                />\r\n                    <Input className='inputPortal' type=\"text\" placeholder='Search...' outline=\"black\" onChange={(e) => setSearch(e.target.value)} />\r\n                </InputGroup>\r\n              </Flex>\r\n            </Flex> \r\n          }\r\n          <TableContainer marginTop={\"10px\"}>\r\n            <Table variant='simple'>\r\n            { dataOutsourcing.length <= 0 ? \r\n              <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\", marginTop : \"50px\", fontWeight : \"bold\"}}>\r\n                <p>NO DATA AVAILABLE</p>\r\n              </div>\r\n              :  \r\n              <Thead>\r\n              <Tr>\r\n                <Th>Email</Th>\r\n                <Th>Name</Th>\r\n                <Th>ID Link</Th>\r\n                <Th>Supplier</Th>\r\n                <Th>Progress</Th>\r\n                <Th>Status</Th>\r\n                <Th>Action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            }\r\n          { dataOutsourcing.length <= 0 ? null : dataOutsourcing.filter(i => \r\n          i.Email.toLowerCase().includes(search) ||\r\n          i.Name.toLowerCase().includes(search) || \r\n          i.IDLink.toLowerCase().includes(search) ||\r\n          i.Supplier.toLowerCase().includes(search) || \r\n          i.User1.toLowerCase().includes(search) ||\r\n          i.User2.toLowerCase().includes(search) \r\n          ).map((i, index) => {\r\n            return(\r\n              <Tbody key={index}>\r\n                <Tr>\r\n                  <Td>{i.Email}</Td>\r\n                  <Td>{i.Name}</Td>\r\n                  <Td>{i.IDLink}</Td>\r\n                  <Td>{i.Supplier}</Td>\r\n                  {/* <Td>\r\n                  <Popover\r\n                    initialFocusRef={initialFocusRef}\r\n                    placement='bottom'\r\n                    closeOnBlur={false}\r\n                    trigger=\"hover\"\r\n                    >\r\n                    <PopoverTrigger>\r\n                    <Badge cursor={\"pointer\"}>Progress</Badge>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent color='white' bg='blue.800' borderColor='blue.800' width={\"280px\"} height={\"300px\"}>\r\n                      <PopoverHeader pt={4} fontWeight='bold' border='0'>\r\n                        Current Progress :\r\n                      </PopoverHeader>\r\n                      <PopoverArrow />\r\n                      <PopoverCloseButton />\r\n                      <PopoverBody>\r\n                      <div>\r\n                       <p className='textMessage'>{i.Message}</p>\r\n                      </div>\r\n                      </PopoverBody>\r\n                    </PopoverContent>\r\n                  </Popover>\r\n                  </Td> */}\r\n                  <Td>\r\n                    <a href=\"/progress\">\r\n                    Progress\r\n                    </a>\r\n                  </Td>\r\n                  {i.status === \"\" || i.status == null ?\r\n                  <Td>None</Td>\r\n                  :\r\n                  <Td key=\"Tes5\">{i.status}</Td>\r\n                  }\r\n                  <Td>\r\n                  <HStack>\r\n                  <Link to={`/outsourcingdetail/${i._id}`}>\r\n                    <Button width={\"100px\"}>\r\n                      Detail\r\n                    </Button>\r\n                  </Link>\r\n                    <Button width={\"100px\"} onClick={() => {\r\n                      deleteDataOutsourcing(i._id)\r\n                    }}>\r\n                      Delete \r\n                    </Button>\r\n                  </HStack>\r\n                  </Td>\r\n                </Tr>\r\n              </Tbody>           \r\n          )\r\n          })}\r\n          </Table>\r\n          </TableContainer>\r\n          </>\r\n          :\r\n          <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            <Spinner />\r\n          </Flex>\r\n          }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OutsourcingHomeAdmin","import React, { useState, useContext, useEffect} from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport { OutsourcingPortal } from '../../Helper/OutsourcingPortalProvider';\r\nimport Axios from 'axios';\r\nimport Appbar from '../Appbar/Appbar.tsx';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormHelperText,\r\n  Input,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableContainer,\r\n  HStack,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  Badge,\r\n  Flex,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport { SearchIcon } from '@chakra-ui/icons';\r\nimport '../PayG/Payg.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Home.css'\r\nimport OutsourcingHomeAdmin from '../Admin/OutsourcingHomeAdmin';\r\n\r\nconst Home = () => {\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const { emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { outsourcingPortal, setOutsourcingPortal } = useContext(OutsourcingPortal);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const [ search, setSearch ] = useState(\"\");\r\n  const [ isLoading , SetIsLoading ] = useState(false);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [ isFetching, setIsFetching ] = useState(true);\r\n  const btnRef = React.useRef();\r\n\r\n  const [ dataOutsourcing, setDataOutsourcing ] = useState([]);\r\n\r\n  const initialFocusRef = React.useRef();\r\n\r\n  const showToastWarning = () => {\r\n    toast.warning('You have no data!', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    \r\n    formData.append('Email', emailLog);\r\n    formData.append('Name', outsourcingPortal.name);\r\n    formData.append('IDLink', outsourcingPortal.idLink);\r\n    formData.append('Supplier', outsourcingPortal.supplier);\r\n    formData.append('User1', outsourcingPortal.user1);\r\n    formData.append('User2', outsourcingPortal.user2);\r\n    formData.append('RoleQuotation', outsourcingPortal.roleQuotation);\r\n    for(let i = 0; i < outsourcingPortal.fileOutsourcing.length; i++) {\r\n    formData.append('fileOutsourcing', outsourcingPortal.fileOutsourcing[i]);\r\n    }\r\n    formData.append('Message', outsourcingPortal.message);\r\n   \r\n    await fetch(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing`, {\r\n      method: 'POST',\r\n      body: formData,\r\n  })\r\n      .then((res) => {\r\n        SetIsLoading(true);\r\n        setTimeout(() => window.location.reload(false), 1000)\r\n      })\r\n  }\r\n\r\n  const getOutsourcingData = () => {\r\n     Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing`).then((response) => {\r\n      setDataOutsourcing(response.data);\r\n      setIsFetching(false);\r\n    })\r\n  }\r\n\r\n  const fetchSharepoint = () => {\r\n    const payload = {\r\n      method: 'GET',\r\n      headers: { \r\n        \"Accept\"       : \"application/json; odata=verbose\",\r\n        \"Content-Type\" : \"application/json;odata=verbose\" \r\n      },\r\n      auth : {\r\n        username : 'bsi90699@bsi.co.id',\r\n        password : 'Password.99'\r\n      },\r\n      credentials: 'same-origin'    // or credentials: 'include'  \r\n    }\r\n  \r\n  fetch(\"https://365bsi.sharepoint.com/sites/ProcPortal/_api/web/lists/getbytitle('TestInvoiceGateway')/items\", payload)\r\n      .then(response => {\r\n        console.log(response);\r\n      }\r\n  )\r\n  }\r\n\r\n  const deleteDataOutsourcing = (id) => {\r\n    Axios.delete(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/delete/${id}`).then((response) => {\r\n      setDataOutsourcing(dataOutsourcing.filter((val) => {\r\n        return val._id != id\r\n      }))\r\n  });     \r\n  }\r\n\r\n \r\n\r\n   useEffect(() => {\r\n    getOutsourcingData();\r\n   }, [])\r\n\r\n  return (\r\n    <>\r\n    {roleUser === \"User\" ? \r\n    <div>\r\n        <ToastContainer />\r\n        <Appbar />\r\n        <h1 style={{display : \"flex\", justifyContent : \"center\", marginTop : \"35px\", fontSize : \"20px\"}}>Welcome to Outsourcing Portal</h1>\r\n        <div style={{display : \"flex\", justifyContent : \"center\", marginTop : \"35px\", flexDirection : \"column\"}}>\r\n          <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}>\r\n          </div>\r\n          { isFetching === false ? \r\n          <>\r\n          { dataOutsourcing.length <= 0 ? \r\n          null\r\n          :\r\n           <Flex className='flexTable'>\r\n              <Flex marginTop=\"-15px\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Button width={\"120px\"} ref={btnRef} colorScheme='teal' mr={3} onClick={onOpen}>\r\n                   Upload CV\r\n                </Button>\r\n                <InputGroup>\r\n                <InputLeftElement\r\n                    pointerEvents='none'\r\n                    children={<SearchIcon color='gray.300' />}\r\n                />\r\n                    <Input className='inputPortal' type=\"text\" placeholder='Search...' outline=\"black\" onChange={(e) => setSearch(e.target.value)} />\r\n                </InputGroup>\r\n              </Flex> \r\n            </Flex> \r\n          }\r\n          <TableContainer marginTop={\"10px\"}>\r\n            <Table variant='simple'>\r\n            {dataOutsourcing.length <= 0 ? \r\n            <div style={{display : \"flex\", flexDirection : \"column\", justifyContent : \"center\", alignItems : \"center\", marginTop : \"50px\", fontWeight : \"bold\"}}>\r\n              <p>NO DATA AVAILABLE</p>\r\n              <Button width={\"120px\"} ref={btnRef} colorScheme='teal' mr={3} mt={\"10px\"} onClick={onOpen}>\r\n                Upload CV\r\n              </Button>\r\n            </div>\r\n            :\r\n              <Thead>\r\n              <Tr>\r\n                <Th>Email</Th>\r\n                <Th>Name</Th>\r\n                <Th>ID Link</Th>\r\n                <Th>Supplier</Th>\r\n                <Th>Progress</Th>\r\n                <Th>Status</Th>\r\n                <Th>Action</Th>\r\n              </Tr>\r\n            </Thead>\r\n            }\r\n          {dataOutsourcing.length <= 0 ? \r\n          null\r\n          : \r\n          dataOutsourcing.filter(i => \r\n          i.Name.toLowerCase().includes(search) || \r\n          i.IDLink.toLowerCase().includes(search) ||\r\n          i.Supplier.toLowerCase().includes(search) || \r\n          i.User1.toLowerCase().includes(search) ||\r\n          i.User2.toLowerCase().includes(search) \r\n          ).map((i, index) => {\r\n            return(\r\n              <Tbody key={index}>\r\n                <Tr>\r\n                  <Td key=\"Test1\">{i.Email}</Td>\r\n                  <Td key=\"Test2\">{i.Name}</Td>\r\n                  <Td key=\"Test3\">{i.IDLink}</Td>\r\n                  <Td key=\"Test4\">{i.Supplier}</Td>\r\n                  {/* <Td key=\"Test6\">\r\n                  <Popover\r\n                    initialFocusRef={initialFocusRef}\r\n                    placement='bottom'\r\n                    closeOnBlur={false}\r\n                    trigger=\"hover\"\r\n                    >\r\n                    <PopoverTrigger>\r\n                    <Badge cursor={\"pointer\"}>Progress</Badge>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent color='white' bg='blue.800' borderColor='blue.800' width={\"280px\"} height={\"300px\"}>\r\n                      <PopoverHeader pt={4} fontWeight='bold' border='0'>\r\n                        Current Progress :\r\n                      </PopoverHeader>\r\n                      <PopoverArrow />\r\n                      <PopoverCloseButton />\r\n                      <PopoverBody>\r\n                      <div>\r\n                       <p className='textMessage'>{i.Message}</p>\r\n                      </div>\r\n                      </PopoverBody>\r\n                    </PopoverContent>\r\n                  </Popover>\r\n                  </Td> */}\r\n                  <Td>\r\n                    <a href=\"/progress\">\r\n                    Progress\r\n                    </a>\r\n                  </Td>\r\n                  {i.status === \"\" || i.status == null ?\r\n                  <Td key=\"Test5\">None</Td>\r\n                  :\r\n                  <>\r\n                  {i.status === \"Approved\" ? \r\n                  <Td key=\"Test11\" style={{color : \"green\"}}>{i.status}</Td>\r\n                  :\r\n                  <Td key=\"Test16\" style={{color : \"red\"}}>{i.status}</Td>\r\n                  }\r\n                  </>\r\n                  }\r\n                  <Td>\r\n                  <HStack>\r\n                  <Link to={`/outsourcingdetail/${i._id}`}>\r\n                    <Button width={\"100px\"}>\r\n                      Edit\r\n                    </Button>\r\n                  </Link>\r\n                    <Button width={\"100px\"} onClick={() => {\r\n                      deleteDataOutsourcing(i._id)\r\n                    }}>\r\n                      Delete \r\n                    </Button>\r\n                  </HStack>\r\n                  </Td>\r\n                </Tr>\r\n              </Tbody>           \r\n          )\r\n          })}\r\n          </Table>\r\n          </TableContainer>\r\n          </>\r\n          :\r\n          <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            <Spinner />\r\n          </Flex>\r\n          }\r\n          <Drawer\r\n            isOpen={isOpen}\r\n            placement='right'\r\n            onClose={onClose}\r\n            finalFocusRef={btnRef}\r\n          >\r\n          <DrawerOverlay />\r\n          <form  method='POST' encType='multipart/form-data' onSubmit={handleSubmit}>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>Upload Your CV</DrawerHeader>\r\n\r\n            <DrawerBody>\r\n            <FormControl isRequired margin={1}>\r\n              <FormLabel>Current User</FormLabel>\r\n              <Input type='text' value={emailLog} disabled onChange={(e) => {\r\n                setEmailLog(e.target.value)\r\n              }} />\r\n\r\n              <FormLabel>Attachments</FormLabel>\r\n              <Input type='file' size=\"md\" multiple onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, fileOutsourcing : e.target.files})\r\n              }} />\r\n              <FormHelperText>*Format</FormHelperText>\r\n              \r\n              <FormLabel>Name (Title)</FormLabel>\r\n              <Input type='text' value={outsourcingPortal.name} onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, name : e.target.value})\r\n              }} />\r\n\r\n              <FormLabel>ID Link</FormLabel>\r\n              <Input type='text' value={outsourcingPortal.idLink} onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, idLink : e.target.value})\r\n              }} />\r\n\r\n              <FormLabel>Supplier</FormLabel>\r\n              <Input type='text' value={outsourcingPortal.supplier} onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, supplier : e.target.value})\r\n              }} />\r\n\r\n              <FormLabel>User-1</FormLabel>\r\n              <Input type='text' value={outsourcingPortal.user1} onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, user1 : e.target.value})\r\n              }} />\r\n\r\n              <FormLabel>User-2</FormLabel>\r\n              <Input type='text' value={outsourcingPortal.user2} onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, user2 : e.target.value})\r\n              }} />\r\n\r\n              <FormLabel>Role Quotation</FormLabel>\r\n              <Input type='number' value={outsourcingPortal.roleQuotation} onChange={(e) => {\r\n                setOutsourcingPortal({...outsourcingPortal, roleQuotation : e.target.value})\r\n              }} />\r\n              </FormControl>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter>\r\n              <div className='btnSubmitPayg'>\r\n                {isLoading === false ?\r\n                <Button width={\"120px\"} colorScheme={\"teal\"} type=\"submit\" mr={3}>Upload</Button>\r\n                :\r\n                <Button\r\n                  isLoading\r\n                  loadingText='Uploading'\r\n                  colorScheme='teal'\r\n                  variant='outline'\r\n                  spinnerPlacement='start'\r\n                  width={\"120px\"}\r\n                  mr={3}\r\n                >\r\n                  Uploading\r\n                </Button>\r\n                }\r\n                <Button width={\"120px\"} variant='outline' mr={3} onClick={onClose}>\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n            </form>\r\n        </Drawer>\r\n        </div>\r\n    </div>\r\n    :\r\n    <OutsourcingHomeAdmin />\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport {createContext, useState} from \"react\"\r\nexport const OutsourcingPortal = createContext();\r\nexport default function OutsourcingPortalProvider({children}) {\r\n  const [outsourcingPortal, setOutsourcingPortal] = useState({\r\n    email : \"\",\r\n    name : \"\",\r\n    idLink : \"\",\r\n    supplier : \"\",\r\n    user1 : \"\",\r\n    user2 : \"\",\r\n    roleQuotation : \"0\",\r\n    fileOutsourcing : [],\r\n    message : \"Current Progress\",\r\n    status : \"\",\r\n\r\n    newName : \"\",\r\n    newIDLink : \"\",\r\n    newSupplier : \"\",\r\n    newUser1 : \"\",\r\n    newUser2 : \"\",\r\n    newRoleQuotation : \"\",\r\n    newMessage : \"\"\r\n  });\r\n  return (\r\n    <OutsourcingPortal.Provider value={{ outsourcingPortal, setOutsourcingPortal }}>\r\n     {children}\r\n    </OutsourcingPortal.Provider>\r\n  );\r\n}"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","cx","classNames","filter","Boolean","join","createContext","name","errorMessage","TableStylesProvider","useTableStyles","Table","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","className","tableProps","React","value","chakra","__css","table","displayName","TableContainer","forwardRef2","overflow","overflowX","rest","chakra2","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","forwardRef3","chakra3","caption","captionSide","Thead","forwardRef4","chakra4","thead","Tbody","forwardRef5","chakra5","tbody","Th","forwardRef6","chakra6","tfoot","forwardRef7","isNumeric","chakra7","th","Tr","forwardRef8","chakra8","tr","Td","forwardRef9","chakra9","td","navigate","useNavigate","useState","search","setSearch","isFetching","setIsFetching","dataOutsourcing","setDataOutsourcing","useEffect","process","response","data","loggedIn","email","replace","withCredentials","request","userExpire2","length","pointerEvents","type","placeholder","outline","onChange","e","target","i","Email","toLowerCase","includes","Name","IDLink","Supplier","User1","User2","index","status","to","_id","width","id","val","OutsourcingPortal","outsourcingPortal","setOutsourcingPortal","isLoading","SetIsLoading","onOpen","onClose","btnRef","handleSubmit","preventDefault","formData","FormData","append","idLink","supplier","user1","user2","roleQuotation","fileOutsourcing","message","fetch","method","body","res","reload","colorScheme","mr","finalFocusRef","encType","onSubmit","isRequired","margin","disabled","multiple","files","loadingText","spinnerPlacement","OutsourcingPortalProvider","newName","newIDLink","newSupplier","newUser1","newUser2","newRoleQuotation","newMessage","Provider"],"sourceRoot":""}