{"version":3,"file":"static/js/440.a5edd80a.chunk.js","mappings":"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","sources":["Component/Appbar/Appbar.tsx","Component/PayG/PaygStatusDetail.js","Helper/DataPaygProvider.js","../node_modules/@chakra-ui/select/dist/index.esm.js","../node_modules/@chakra-ui/textarea/dist/index.esm.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"http://localhost:3000\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React, { useState, useContext, useEffect, useRef} from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { DataPayg } from '../../Helper/DataPaygProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport Appbar from '../Appbar/Appbar.tsx';\r\nimport {\r\n    Button,\r\n    Spinner,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Select,\r\n    FormHelperText,\r\n    Textarea\r\n  } from '@chakra-ui/react'\r\nimport './PaygStatus.css'\r\nimport moment from 'moment';\r\nimport emailjs from '@emailjs/browser';\r\nimport './PaygStatusDetail.css';\r\nimport parse from 'html-react-parser';\r\n\r\nconst PaygStatusDetail = () => {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const {id} = useParams();\r\n\r\n  const { emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { payg, setPayg } = useContext(DataPayg);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const [ isLoading, setIsLoading ] = useState(true);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [ dataListID, setDataListID ] = useState([]);\r\n  const [ isSaving, setIsSaving ] = useState(false);\r\n  const [ isSubmit, setIsSubmit ] = useState(false);\r\n\r\n  const { \r\n    isOpen: isOpenSubmitModal, \r\n    onOpen: onOpenSubmitModal, \r\n    onClose: onCloseSubmitModal \r\n  } = useDisclosure()\r\n\r\n  const initialRef = React.useRef(null)\r\n  const finalRef = React.useRef(null)\r\n\r\n\r\n  const updateDataPayg = async (id, InvoiceNumber, InvoiceDate, Amount, Subject, BuyerName, PaygAttachments) => {\r\n  \r\n      const formData = new FormData();\r\n      \r\n      formData.append('id', id);\r\n      formData.append('InvoiceNumber', payg.newInvoiceNumber ? payg.newInvoiceNumber : InvoiceNumber);\r\n      formData.append('InvoiceDate', payg.newInvoiceDate ? payg.newInvoiceDate : InvoiceDate);\r\n      formData.append('Amount', payg.newInvoiceAmount ? payg.newInvoiceAmount : Amount);\r\n      formData.append('Subject', payg.newInvoiceSubject ? payg.newInvoiceSubject : Subject);\r\n      formData.append('BuyerName', payg.newBuyerName ? payg.newBuyerName : BuyerName);\r\n      for(let i = 0; i < payg.newFilePayg.length; i++) {\r\n      formData.append('file', payg.newFilePayg[i] ? payg.newFilePayg[i] : PaygAttachments);\r\n      }\r\n     \r\n      await fetch(`${process.env.REACT_APP_MY_ENV_VAL}/payg/update/all`, {\r\n        method: 'PUT',\r\n        body: formData,\r\n      })\r\n      .then((res) => {\r\n        setIsSaving(true);\r\n        setTimeout(() => window.location.reload(false), 1200);\r\n      })\r\n    }\r\n\r\n    const form = useRef();\r\n    const sendEmail = (e) => {\r\n      \r\n      e.preventDefault();\r\n  \r\n      emailjs.sendForm('service_i2rw35b', 'template_kbjdjat', form.current, 'H-1q8l7mJMHKzqNUS')\r\n        .then((result) => {\r\n        }, (error) => {\r\n          console.log(error.text);\r\n        });\r\n    };\r\n\r\n    const updateSubmitted = (id, e) => {\r\n      Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/payg/update/submitted` , {\r\n        submitted: e.target.name, \r\n        id : id\r\n      }).then((response)=> {\r\n        setIsSubmit(true);\r\n        setTimeout(() => window.location.reload(false), 1000);\r\n      });\r\n    };\r\n\r\n    const updateStatus = (id, e) => {\r\n      Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/payg/update/status` , {\r\n        status: e.target.value, \r\n        id : id\r\n      }).then((response) => {\r\n        setTimeout(() => window.location.reload(false), 1000);\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n      const cancelToken = Axios.CancelToken.source();\r\n\r\n      Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/payg/${id}`, {\r\n        cancelToken : cancelToken.token,\r\n      }).then((response) => {\r\n        setDataListID(response.data);\r\n        setIsLoading(false);\r\n      }).catch((err) => {\r\n        if (Axios.isCancel(err)){\r\n          console.log(\"canceled\");\r\n        } else {\r\n          console.log(\"not canceled\")\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        cancelToken.cancel();\r\n      }   \r\n     }, [id])\r\n\r\n     useEffect(() => {\r\n\r\n      async function userExpire2 () {\r\n        const request = await  Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/login`)\r\n        .then((response)=> {\r\n          if(response.data.loggedIn === true) {\r\n            setEmailLog(response.data.email);\r\n            setRoleUser(response.data.role);\r\n          } else {\r\n            navigate(\"/\", {replace : true})\r\n          }\r\n        }, {withCredentials : true});\r\n        return request;\r\n      }\r\n      userExpire2();\r\n     }, [emailLog])\r\n\r\n       \r\n     function convertToPlain(html){\r\n\r\n      // Create a new div element\r\n      var tempDivElement = document.createElement(\"div\");\r\n      \r\n      // Set the HTML content with the given value\r\n      tempDivElement.innerHTML = html;\r\n      \r\n      // Retrieve the text property of the element \r\n      return tempDivElement.textContent || tempDivElement.innerText || \"\";\r\n    } \r\n\r\n    var htmlString= \"<div><h1>Bears Beets Battlestar Galactica </h1>\\n<p>Quote by Dwight Schrute</p></div>\";\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n    <div style={{display : \"flex\", flexDirection : \"column\"}}>\r\n    <Appbar />\r\n      <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\", margin : \"30px\"}}>\r\n\r\n    { roleUser === \"Admin\" \r\n      ? null\r\n      : <>\r\n          { dataListID.submitted === \"Submitted\" || dataListID.status === \"Approved\" || dataListID.status === \"Rejected\"\r\n             ?  null\r\n             :  <Button width={20} onClick={onOpen}>Edit</Button>\r\n          }\r\n          </>\r\n    }\r\n\r\n    { roleUser === \"Admin\" \r\n      ? null\r\n      : <>\r\n          { dataListID.submitted === \"Submitted\" || dataListID.status === \"Approved\" || dataListID.status === \"Rejected\"\r\n            ?  null\r\n            :  <Button width={20} onClick={onOpenSubmitModal} marginLeft={5}>Submit</Button>\r\n          }\r\n        </>\r\n     }\r\n         \r\n      </div>\r\n        <div style={{display : \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\"}}>\r\n          {isLoading ? \r\n          <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"30px\"}}>\r\n            <Spinner/>\r\n          </div> \r\n          : \r\n          <>\r\n          <Modal\r\n            initialFocusRef={initialRef}\r\n            finalFocusRef={finalRef}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            closeOnOverlayClick={false}\r\n          >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader>Edit Data</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n                \r\n                <FormControl mt={4}>\r\n                  <FormLabel>New Invoice Number</FormLabel>\r\n                  <Input type=\"text\" value={payg.newInvoiceNumber ? payg.newInvoiceNumber : dataListID.InvoiceNumber} onChange={(e) => {\r\n                  setPayg({...payg, newInvoiceNumber : e.target.value})\r\n                  }} />\r\n                </FormControl>\r\n\r\n                <FormControl mt={4}>\r\n                  <FormLabel>New Date</FormLabel>\r\n                  <Input type=\"date\" value={payg.newInvoiceDate ? payg.newInvoiceDate : dataListID.InvoiceDate} onChange={(e) => {\r\n                  setPayg({...payg, newInvoiceDate : e.target.value})\r\n                  }}   />\r\n                </FormControl>\r\n\r\n                <FormControl mt={4}>\r\n                  <FormLabel>New Buyer Name</FormLabel>\r\n                  <Select placeholder='Select Target Name' onChange={(e) => {\r\n                  setPayg({...payg, newBuyerName : e.target.value})\r\n                  }} >\r\n                    <option value=\"Tovan Octa Ferdinan\">Tovan Octa Ferdinan</option>\r\n                    <option value=\"Muhammad Ridwan\">Muhammad Ridwan</option>\r\n                    <option value=\"Ismi Rahmawati\">Ismi Rahmawati</option>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <FormControl mt={4}>\r\n                  <FormLabel>New Invoice Amount</FormLabel>\r\n                     <Input type=\"number\" value={payg.newInvoiceAmount? payg.newInvoiceAmount : dataListID.Amount} onChange={(e) => {\r\n                      setPayg({...payg, newInvoiceAmount : e.target.value})\r\n                      }}  />\r\n                  <FormHelperText>*IDR</FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl mt={4}>\r\n                  <FormLabel>New Invoice Subject</FormLabel>\r\n                  <Input type=\"text\" value={payg.newInvoiceSubject ? payg.newInvoiceSubject : dataListID.Subject} onChange={(e) => {\r\n                      setPayg({...payg, newInvoiceSubject : e.target.value})\r\n                      }} />\r\n                </FormControl>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                {isSaving === false ? \r\n                <Button width={\"100px\"} colorScheme='blue' mr={3} onClick={() => {updateDataPayg(\r\n                  dataListID._id, dataListID.InvoiceNumber, dataListID.InvoiceDate, dataListID.Amount, dataListID.Subject, dataListID.BuyerName, dataListID.PaygAttachments)\r\n                }}>\r\n                  Save\r\n                </Button>\r\n                :\r\n                <Button\r\n                isLoading\r\n                loadingText='Saving'\r\n                colorScheme='blue'\r\n                variant='outline'\r\n                width={\"100px\"}\r\n                mr={3}\r\n                marginLeft={\"1px\"}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                }\r\n                <Button width={\"100px\"} onClick={onClose}>Cancel</Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </Modal>\r\n\r\n          {/* -------------------------------------------- */}\r\n          \r\n          <Modal\r\n            initialFocusRef={initialRef}\r\n            finalFocusRef={finalRef}\r\n            isOpen={isOpenSubmitModal}\r\n            onClose={onCloseSubmitModal}\r\n            closeOnOverlayClick={false}\r\n          >\r\n            <ModalOverlay />\r\n            <form ref={form} onSubmit={sendEmail}>\r\n            <ModalContent>\r\n              <ModalHeader>Send an Email</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n                <FormControl isRequired>\r\n                  <FormLabel>To Email</FormLabel>\r\n                  <Input type=\"email\" name=\"user_email\" ref={initialRef} placeholder='To Email' />\r\n                </FormControl>\r\n\r\n                <FormControl mt={4} isRequired>\r\n                  <FormLabel>Message</FormLabel>\r\n                  <Textarea name=\"message\" placeholder='Please Input Your Email and Username' defaultValue={convertToPlain(`<p>ID : ${dataListID._id}</p>\\n<p>Email : ${dataListID.Email}</p>\\n<p>Invoice Number : ${dataListID.InvoiceNumber}</p>\\n<p>Invoice Date : ${moment(dataListID.InvoiceDate).format(\"DD MMMM YYYY\")}</p>\\n<p>Amount : ${dataListID.Amount}</p>\\n<p>Subject : ${dataListID.Subject}</p>\\n<p>Buyer Name : ${dataListID.BuyerName}</p>\\n<p>Attachments : ${dataListID.PaygAttachments}</p>\\n<p>Created : ${moment(dataListID.createdAt).format('MMMM Do YYYY, h:mm:ss a')}</p>\\n<p>Updated : ${moment(dataListID.updatedAt).format('MMMM Do YYYY, h:mm:ss a')}</p>\\n`)}/>        \r\n                </FormControl>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                {isSubmit === false ?\r\n                <Button type=\"submit\" name=\"Submitted\" value=\"Submit\" width={\"110px\"} colorScheme='blue' mr={3} onClick={(e) => {\r\n                  updateSubmitted(dataListID._id, e)\r\n                }}>\r\n                  Submit\r\n                </Button>\r\n                :\r\n                <Button\r\n                isLoading\r\n                loadingText='Submitting'\r\n                colorScheme='blue'\r\n                variant='outline'\r\n                mr={3}\r\n                width={\"110px\"}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                }\r\n                <Button width={\"110px\"} onClick={onCloseSubmitModal}>Cancel</Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n            </form>\r\n          </Modal>\r\n                  <div className='texter'>\r\n                      <p>ID              : {dataListID._id}</p>\r\n                      <p>Email           : {dataListID.Email}</p>\r\n                      <p>Invoice Number  : {dataListID.InvoiceNumber}</p>\r\n                      <p>Invoice Date    : {moment(dataListID.InvoiceDate).format(\"DD MMMM YYYY\")}</p>\r\n                      <p>Invoice Amount  : {dataListID.Amount}</p>\r\n                      <p>Invoice Subject : {dataListID.Subject}</p>\r\n                      <p>Buyer Name      : {dataListID.BuyerName}</p>\r\n                      <p>Submitted       : {dataListID.submitted}</p>\r\n                      <p>Status          : {dataListID.status}</p>\r\n                      <p>Created At      : {moment(dataListID.createdAt).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n                      <p>Updated At      : {moment(dataListID.updatedAt).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n                      <p>Attachments     : {dataListID.PaygAttachments}</p>\r\n                  </div>\r\n                    \r\n                \r\n              {dataListID.status === \"None\"  ?\r\n              <>\r\n              {roleUser === \"Admin\" ? \r\n              <div style={{display : \"flex\", flexDirection : \"row\", justifyContent : \"center\", alignItems : \"center\", marginTop : \"30px\"}}>\r\n                <Button width={100} name=\"status\" value=\"Approved\" onClick={(e) => {\r\n                  updateStatus(dataListID._id, e)\r\n                }}>Approve</Button>\r\n\r\n                <Button width={100} marginLeft={30} name=\"status\" value=\"Rejected\" onClick={(e) => {\r\n                  updateStatus(dataListID._id, e)\r\n                }}>Reject</Button>\r\n              </div>\r\n              :\r\n              null\r\n              }\r\n              </>\r\n              :\r\n              null\r\n              }\r\n          </>\r\n              }\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaygStatusDetail","import React from 'react';\r\nimport {createContext, useState} from \"react\"\r\nexport const DataPayg = createContext();\r\nexport default function DataPaygProvider({children}) {\r\n  const [payg, setPayg] = useState({\r\n    invoiceNumber : \"\",\r\n    invoiceDate : \"\",\r\n    buyerName : \"\",\r\n    invoiceAmount : \"\",\r\n    invoiceSubject : \"\",\r\n    filePayg : [],\r\n\r\n    newInvoiceNumber : \"\",\r\n    newInvoiceDate : \"\",\r\n    newBuyerName : \"\",\r\n    newInvoiceAmount : \"\",\r\n    newInvoiceSubject : \"\",\r\n    newFilePayg : [],\r\n    submitted : \"\",\r\n    status : \"\"\r\n  });\r\n  return (\r\n    <DataPayg.Provider value={{ payg, setPayg }}>\r\n     {children}\r\n    </DataPayg.Provider>\r\n  );\r\n}","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// ../../utilities/object-utils/src/index.ts\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\n\n// src/select-field.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nvar SelectField = forwardRef(function SelectField2(props, ref) {\n  const { children, placeholder, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.select, {\n    ...rest,\n    ref,\n    className: cx(\"chakra-select\", className)\n  }, placeholder && /* @__PURE__ */ React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\nSelectField.displayName = \"SelectField\";\n\n// src/select.tsx\nvar Select = forwardRef2((props, ref) => {\n  var _a;\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...(_a = styles.field) == null ? void 0 : _a[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: \"chakra-select__wrapper\",\n    __css: rootStyles,\n    ...layoutProps,\n    ...rootProps\n  }, /* @__PURE__ */ React.createElement(SelectField, {\n    ref,\n    height: h ?? height,\n    minH: minH ?? minHeight,\n    placeholder,\n    ...ownProps,\n    __css: fieldStyles\n  }, props.children), /* @__PURE__ */ React.createElement(SelectIcon, {\n    \"data-disabled\": dataAttr(ownProps.disabled),\n    ...(iconColor || color) && { color: iconColor || color },\n    __css: styles.icon,\n    ...iconSize && { fontSize: iconSize }\n  }, icon));\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ React.createElement(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}));\nvar IconWrapper = chakra2(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ React.createElement(DefaultIcon, null), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ React.createElement(IconWrapper, {\n    ...rest,\n    className: \"chakra-select__icon-wrapper\"\n  }, isValidElement(children) ? clone : null);\n};\nSelectIcon.displayName = \"SelectIcon\";\nexport {\n  DefaultIcon,\n  Select,\n  SelectField\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ React.createElement(chakra.textarea, {\n    ref,\n    rows,\n    ...textareaProps,\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  });\n});\nTextarea.displayName = \"Textarea\";\nexport {\n  Textarea\n};\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.7.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.7.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","navigate","useNavigate","id","useParams","DataPayg","payg","setPayg","useState","isLoading","setIsLoading","onOpen","onClose","dataListID","setDataListID","isSaving","setIsSaving","isSubmit","setIsSubmit","isOpenSubmitModal","onOpenSubmitModal","onCloseSubmitModal","initialRef","React","finalRef","updateDataPayg","InvoiceNumber","InvoiceDate","Amount","Subject","BuyerName","PaygAttachments","formData","FormData","append","newInvoiceNumber","newInvoiceDate","newInvoiceAmount","newInvoiceSubject","newBuyerName","i","newFilePayg","length","fetch","process","method","body","res","reload","form","useRef","updateStatus","e","status","target","value","response","useEffect","cancelToken","token","data","catch","err","console","log","cancel","loggedIn","email","replace","withCredentials","request","userExpire2","margin","submitted","width","initialFocusRef","finalFocusRef","closeOnOverlayClick","pb","type","onChange","placeholder","colorScheme","mr","_id","loadingText","ref","onSubmit","preventDefault","emailjs","current","result","error","text","isRequired","name","defaultValue","html","tempDivElement","document","createElement","innerHTML","textContent","innerText","convertToPlain","Email","moment","format","createdAt","updatedAt","updateSubmitted","className","createContext","DataPaygProvider","invoiceNumber","invoiceDate","buyerName","invoiceAmount","invoiceSubject","filePayg","Provider","cx","classNames","filter","Boolean","join","SelectField","forwardRef","props","rest","chakra","displayName","Select","forwardRef2","_a","condition","styles","useMultiStyleConfig","omitThemingProps","rootProps","height","minHeight","iconColor","iconSize","object","keys","picked","omitted","Object","entries","key","includes","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","fieldStyles","paddingEnd","field","_focus","zIndex","chakra2","__css","SelectIcon","disabled","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","pointerEvents","top","clone","cloneElement","focusable","isValidElement","Textarea","useStyleConfig","rows","textareaProps","textareaStyles","keysToOmit","omit","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","responseText","sendPost","url","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","forEach","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","currentForm","querySelector","nodeName","findHTMLForm"],"sourceRoot":""}