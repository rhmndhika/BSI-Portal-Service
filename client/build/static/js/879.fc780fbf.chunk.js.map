{"version":3,"file":"static/js/879.fc780fbf.chunk.js","mappings":"sVAuCe,SAASA,IAEtBC,EAAAA,GAAAA,SAAAA,iBAAiC,EAGjC,OAAiCC,EAAAA,EAAAA,YAAWC,EAAAA,WAArCC,EAAQ,EAARA,SACP,GAD4B,EAAXC,aACiBH,EAAAA,EAAAA,YAAWI,EAAAA,WAArCC,EAAQ,EAARA,SACR,GAD6B,EAAXC,aACWC,EAAAA,EAAAA,OAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SA0BhB,OACE,UAAC,KAAG,YACF,UAAC,KAAI,CACHC,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BC,OAAOD,EAAAA,EAAAA,IAAkB,WAAY,SACrCE,KAAM,OACNC,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,GACZE,aAAc,EACdC,YAAa,QACbC,aAAaR,EAAAA,EAAAA,IAAkB,WAAY,YAC3CS,EAAG,EACHC,OAAO,KACPC,MAAO,SAAS,WAEjB,SAAC,KAAI,CACFC,KAAM,CAAER,KAAM,EAAGS,GAAI,QACrBC,GAAI,CAAEV,MAAO,GACbW,QAAS,CAAEX,KAAM,OAAQS,GAAI,QAAS,UACtC,SAAC,KAAU,CACTG,QAASlB,EACTmB,WAAY,EACZC,KACErB,GAAS,SAAC,KAAS,CAACsB,EAAG,EAAGC,EAAG,KAAQ,SAAC,KAAa,CAACD,EAAG,EAAGC,EAAG,IAE/DC,QAAS,QACT,aAAY,yBAGhB,UAAC,KAAI,CAACT,KAAM,CAAER,KAAM,GAAKkB,QAAS,CAAElB,KAAM,SAAUS,GAAI,SAAU,WAChE,cAAGU,KAAK,QAAO,UACf,SAAC,KAAI,CACHC,WAAWC,EAAAA,EAAAA,IAAmB,CAAErB,KAAM,SAAUS,GAAI,SACpDa,WAAY,UACZC,WAAY,MACZ1B,OAAOD,EAAAA,EAAAA,IAAkB,WAAY,YAAY,oCAMnD,UAAC,KAAI,CAACe,QAAS,CAAEX,KAAM,OAAQS,GAAI,QAAUD,KAAM,CAACR,KAAO,GAAIU,GAAI,GAAIQ,QAAQ,WAAWM,eAAgB,WAAW,WACnH,SAACC,EAAU,KACX,SAAC,KAAI,CAACD,eAAe,SAASE,WAAW,kBAK7C,SAAC,KAAK,CACJlB,KAAM,CAAER,KAAM,EAAGS,GAAI,GACrBS,QAAS,WACTS,UAAW,MACXC,QAAS,EACTf,WAAY,EAAE,UAOf,UAAC,KAAI,YACE,SAAC,KAAU,CACTgB,GAAIC,EAAAA,GACJC,QAAS,OACTd,QAAS,OACTe,OAAQ,UACRC,KAAM,EAAE,UACV,SAAC,KAAU,CAAC,aAAW,aAAahB,QAAS,QAAQ,UACnD,SAAC,KAAY,SAGf,UAAC,KAAQ,CAACS,WAAY,SAAS,WAC7B,mBACA,SAAC,KAAM,WACL,SAAC,KAAM,CACLQ,KAAM,KACNC,IAAK,0DAGT,mBACA,SAAC,KAAM,WACL,UAAC,KAAI,CAACC,cAAc,SAAQ,WAC1B,UAAC,KAAI,YACH,SAAC,KAAI,UAAEjD,KAAgB,sBAEzB,SAAC,KAAI,CAACqC,eAAe,SAAQ,UAC3B,SAAC,KAAI,UAAElC,YAIb,mBACA,SAAC,IAAW,KACZ,wBACA,SAAC,KAAQ,iCAEK,UAAbA,GACD,cAAG6B,KAAK,mBAAkB,UAC1B,SAAC,KAAQ,0BAGT,MAEA,cAAGP,QA9GJ,WACb5B,EAAAA,GAAAA,IAAU,+DAA+DqD,MAAK,WAC9E,IAhBAC,EAAAA,GAAAA,QAAc,cAAe,CAC3BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAUTC,YAAW,kBAAMC,OAAOC,SAASC,OAAO,wBAAwB,GAAE,IACpE,EAyGmC,UACnB,SAAC,KAAQ,mCAOrB,SAAC,KAAQ,CAACC,GAAI3D,EAAQ4D,gBAAc,YAClC,SAACC,EAAS,QAIlB,CAEA,IAAM7B,EAAa,WACjB,IAAM8B,GAAY3D,EAAAA,EAAAA,IAAkB,WAAY,YAC1C4D,GAAiB5D,EAAAA,EAAAA,IAAkB,WAAY,SAC/C6D,GAAwB7D,EAAAA,EAAAA,IAAkB,QAAS,YAEzD,OACE,SAAC,KAAK,CAAC+B,UAAW,MAAOC,QAAS,GAAG,SAClC8B,EAAUC,KAAI,SAACC,GAAO,aACrB,SAAC,KAAG,WACF,UAAC,KAAO,CAACC,QAAS,QAASC,UAAW,eAAe,WACnD,SAAC,KAAc,WACb,SAAC,KAAI,CACHzD,EAAG,EACHc,KAAkB,QAAd,EAAEyC,EAAQzC,YAAI,QAAI,IACtB4C,SAAU,KACVxC,WAAY,IACZ1B,MAAO0D,EACPrD,aAAa,MACb8D,kBAAmB,WACnBC,OAAQ,CACNC,eAAgB,OAChBrE,MAAO2D,GACP,SACDI,EAAQO,UAIZP,EAAQQ,WACP,SAAC,KAAc,CACbC,OAAQ,EACRC,UAAW,KACX3E,GAAI8D,EACJpD,EAAG,EACH0B,QAAS,KACTE,KAAM,KAAK,UACX,SAAC,KAAK,UACH2B,EAAQQ,SAAST,KAAI,SAACY,GAAK,OAC1B,SAACC,GAAa,UAAuBD,GAAjBA,EAAMJ,MAAoB,YA7BhDP,EAAQO,MAmCZ,KAId,EAEMK,EAAgB,SAAH,GAA4C,IAAtCL,EAAK,EAALA,MAAOhD,EAAI,EAAJA,KAAMsD,EAAQ,EAARA,SACpC,OACE,SAAC,KAAI,CACHtD,KAAMA,EACNuD,KAAM,QACN/D,QAAS,QACTN,EAAG,EACH0B,QAAS,KAAK,UAEd,UAAC,KAAK,CAACJ,UAAW,MAAOpB,MAAO,SAAS,WACvC,UAAC,KAAG,YACF,SAAC,KAAI,CACHoE,WAAY,eACZpD,WAAY,IAAI,SACf4C,KAEH,SAAC,KAAI,CAACJ,SAAU,KAAK,SAAEU,QAEzB,SAAC,KAAI,CACHE,WAAY,eACZC,UAAW,oBACXC,QAAS,EACTC,YAAa,CAAED,QAAS,OAAQD,UAAW,iBAC3C1D,QAAS,WACTX,MAAO,SACPC,KAAM,EAAE,UACR,SAAC,KAAI,CAACX,MAAO,WAAYkB,EAAG,EAAGC,EAAG,EAAGa,GAAIkD,EAAAA,WAKnD,EAEMzB,EAAY,WAChB,OACE,SAAC,KAAK,CACJ3D,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BS,EAAG,EACHM,QAAS,CAAEF,GAAI,QAAS,SACvBiD,EAAUC,KAAI,SAACC,GAAO,OACrB,SAACoB,GAAa,UAAyBpB,GAAnBA,EAAQO,MAAsB,KAI1D,EAEMa,EAAgB,SAAH,GAA4C,IAAtCb,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUjD,EAAI,EAAJA,KACxC,GAA6B3B,EAAAA,EAAAA,MAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAEhB,OACE,UAAC,KAAK,CAACkC,QAAS,EAAGhB,QAASwD,GAAY1E,EAAS,WAC/C,UAAC,KAAI,CACHK,GAAI,EACJ8B,GAAIoD,EAAAA,GACJ9D,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQ,IACdD,QAAS,gBACTX,MAAO,SACP0D,OAAQ,CACNC,eAAgB,QAChB,WACF,SAAC,KAAI,CACH3C,WAAY,IACZ1B,OAAOD,EAAAA,EAAAA,IAAkB,WAAY,YAAY,SAChDuE,IAEFC,IACC,SAAC,KAAI,CACHvC,GAAIqD,EAAAA,GACJP,WAAY,uBACZC,UAAWnF,EAAS,iBAAmB,GACvCsB,EAAG,EACHC,EAAG,QAKT,SAAC,KAAQ,CAACoC,GAAI3D,EAAQ4D,gBAAc,EAAC8B,MAAO,CAAEC,UAAW,eAAgB,UACvE,SAAC,KAAK,CACJC,GAAI,EACJC,GAAI,EACJC,WAAY,EACZpF,YAAa,QACbC,aAAaR,EAAAA,EAAAA,IAAkB,WAAY,YAC3CW,MAAO,QAAQ,SACd6D,GACCA,EAAST,KAAI,SAACY,GAAK,OACjB,SAAC,KAAI,CAAmBxE,GAAI,EAAGoB,KAAMoD,EAAMpD,KAAK,SAC7CoD,EAAMJ,OADEI,EAAMJ,MAEV,UAMrB,EASMT,EAA4B,CAChC,CACES,MAAO,eACPC,SAAU,CACR,CACED,MAAO,sBACPM,SAAU,sBACVtD,KAAM,wBAER,CACEgD,MAAO,WACPM,SAAU,WACVtD,KAAM,KAER,CACEgD,MAAO,gBACPM,SAAU,gBACVtD,KAAM,KAER,CACEgD,MAAO,sBACPM,SAAU,sBACVtD,KAAM,KAER,CACEgD,MAAO,kBACPM,SAAU,2BACVtD,KAAM,aAER,CACEgD,MAAO,qBACPM,SAAU,qBACVtD,KAAM,kBAKZ,CACEgD,MAAO,gBACPC,SAAU,CACR,CACED,MAAO,YACPM,SAAU,6BACVtD,KAAM,aAER,CACEgD,MAAO,eACPM,SAAU,sCACVtD,KAAM,qBAER,CACEgD,MAAO,cACPM,SAAU,sCACVtD,KAAM,OAIZ,CACEgD,MAAO,cACPC,SAAU,CACR,CACED,MAAO,wBACPM,SAAU,6BACVtD,KAAM,SAER,CACEgD,MAAO,uBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,yBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,iCACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,gBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,mBACPM,SAAU,sCACVtD,KAAM,KAER,CACEgD,MAAO,cACPM,SAAU,sCACVtD,KAAM,O,qOCnaRqE,EAASC,EAAAA,GAAAA,QAAWC,wDAuQ1B,UArQiB,WAEb1G,EAAAA,GAAAA,SAAAA,iBAAiC,EAEjC,IAAI2G,GAAWC,EAAAA,EAAAA,MAEf,GAAkC3G,EAAAA,EAAAA,YAAWC,EAAAA,WAArCC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAClB,GAAkCH,EAAAA,EAAAA,YAAWI,EAAAA,UAA3BE,GAAF,EAARD,SAAqB,EAAXC,aAClB,GAAkCsG,EAAAA,EAAAA,UAAS,IAAG,eAC9C,GADgB,KAAa,MACHA,EAAAA,EAAAA,aAAU,eACpC,GADY,KAAS,MACaA,EAAAA,EAAAA,UAASL,EAAOM,KAAG,eACrD,GADgB,KAAa,MACKD,EAAAA,EAAAA,WAAS,IAAM,eACjD,GADgB,KAAa,MACDA,EAAAA,EAAAA,UAAS,KAAG,eAAhCE,EAAK,KAAEC,EAAQ,KAEvB,GAAsCH,EAAAA,EAAAA,UAAS,IAAG,eAA3CI,EAAW,KAAEC,EAAc,KAElC,GAAwCL,EAAAA,EAAAA,UAAS,CAACM,KAAO,GAAIC,IAAK,GAAIC,KAAO,GAAIC,WAAY,IAAO,eAA5FC,EAAW,KAAEC,EAAc,KACnC,GAAwCX,EAAAA,EAAAA,UAAS,gBAAe,eAAxDY,EAAW,KAAEC,EAAc,MAUnCC,EAAAA,EAAAA,YAAU,WACRnB,EAAOoB,KAAK,WAAYzH,EAC1B,GAAG,CAACA,IAEJqG,EAAOqB,GAAG,cAAc,SAAAC,GACtBC,QAAQC,IAAI,iBAAkBF,GAC9BZ,EAAe,GAAD,eAAKD,GAAW,CAAE,CAAEE,KAAOW,EAAWX,KAAMC,IAAMU,EAAWV,IAAKE,UAAYQ,EAAWR,aACzG,IAEAd,EAAOqB,GAAG,YAAY,SAAAI,GACpBjB,EAASiB,GACTT,EAAe,CAACL,KAAOhH,EAAUiH,IAAMG,EAAYH,KACrD,KA2BAO,EAAAA,EAAAA,YAAU,WACoB,aAWzB,OAXyB,0BAA1B,yGACyB3H,EAAAA,GAAAA,IAAU,GAAD,OAAI0G,uDAAgC,WACnErD,MAAK,SAAC6E,IACyB,IAA3BA,EAASC,KAAKC,UACfhI,EAAY8H,EAASC,KAAKE,OAC1B9H,EAAY2H,EAASC,KAAKzC,OAE1BiB,EAAS,IAAK,CAAC2B,SAAU,GAE7B,GAAG,CAACC,iBAAkB,IAAO,KAAD,EARf,OAAPC,EAAO,yBASNA,GAAO,4CACf,uBAZY,WACa,wBAY1BC,EACD,GAAG,CAACtI,IAGJ,IAAMuI,EAAe,SAACC,GACrB,IAAIC,EAAUnB,EACVoB,EAAUF,EAAEG,OAAOC,YACvBrB,EAAemB,GACfrC,EAAOoB,KAAK,cAAe,CAAEgB,QAAAA,EAASC,QAAAA,IACtC3B,EAAe,GAChB,EAEM8B,EAAgB,SAACC,EAAUhB,GAChC,IAAIX,GAAY,EAMhB,OALAW,EAASiB,SAAQ,SAAAC,GACZA,IAAaF,IACd3B,GAAY,EAEhB,IACOA,CACR,EAGL,OA8BE,iCACA,SAAC,IAAM,KACP,UAAC,KAAI,CAAClE,cAAc,SAASZ,eAAe,eAAeE,WAAW,SAAQ,WAE5E,UAAC,KAAI,CAACU,cAAc,SAASZ,eAAgB,SAAUE,WAAY,SAAS,WAE1E,UAAC,KAAI,CAACU,cAAc,SAASZ,eAAgB,SAAUE,WAAY,SAAS,WAC1E,SAAC,KAAI,WACH,SAAC,KAAI,+BAEP,SAAC,KAAI,WACH,gBAAIyD,MAAO,CAACiD,UAAY,OAAQpG,OAAS,WAAW,WAClD,eAAImD,MAAO,CAACxE,QAAU,OAAQa,eAAiB,UAAWZ,QAAS8G,EAAa,2BAChF,eAAIvC,MAAO,CAACxE,QAAU,OAAQa,eAAiB,UAAWZ,QAAS8G,EAAa,oBAChF,eAAIvC,MAAO,CAACxE,QAAU,OAAQa,eAAiB,UAAWZ,QAAS8G,EAAa,qBAChF,eAAIvC,MAAO,CAACxE,QAAU,OAAQa,eAAiB,UAAWZ,QAAS8G,EAAa,4BAMtF,UAAC,KAAI,CAACtF,cAAc,SAASZ,eAAgB,SAAUE,WAAY,SAAU2D,GAAG,OAAM,WACpF,SAAC,KAAI,CAAC7D,eAAgB,SAAUE,WAAY,SAAS,UACnD,SAAC,KAAI,+BAEP,SAAC,KAAI,CAACF,eAAgB,SAAUE,WAAY,SAAS,UACrD,eAAIyD,MAAO,CAACiD,UAAY,QAAQ,SAC7BrC,EAAMpC,KAAI,SAAC0E,EAAMC,GAChB,OACE,+BACA,SAAC,KAAI,CAAC9G,eAAe,SAASE,WAAW,SAAQ,SAC/C2G,IAASlJ,GACT,gBAAIgG,MAAO,CAACnD,OAAS,WAAuBpB,QAAS8G,EAAa,UAC/DW,EAAI,UAD+BA,IAItC,eAAIlD,MAAO,CAACnD,OAAS,WAAuBpB,QAAS8G,EAAa,SAAEW,GAA9BA,IANeC,IAW3D,eAON,SAAC,KAAI,CAAClG,cAAc,SAASZ,eAAe,SAASE,WAAW,SAAQ,UAsBtE,SAAC,KAAI,WACL,iBAAK6G,UAAU,cAAa,UACzB9B,EAAY+B,OAAS,IACrB,gBAAKD,UAAU,eAAc,UAC5B,2CAAmB9B,EAAW,UAGhC,gBAAK8B,UAAU,cAAa,UAC1B,2CAAmB9B,EAAW,UAGlC,gBAAK8B,UAAU,YAAW,UAC1B,SAAC,KAAc,CAACA,UAAU,oBAAmB,SAC1CtC,EAAYtC,KAAI,SAAC8E,EAAgBH,GAClC,OACE,gBACEC,UAAU,UACVzC,GAAI3G,IAAasJ,EAAetC,KAAO,MAAQhH,IAAasJ,EAAetC,KAAO,QAAU,KAAK,UAEjG,4BACE,gBAAKoC,UAAU,kBAAiB,UAC9B,iBAAMpD,MAAO,CAACtF,MAAQ4I,EAAenC,UAAY,MAAQ,SAAS,SAC7DmC,EAAerC,SAGtB,iBAAKmC,UAAU,eAAc,WAC3B,cAAGzC,GAAG,OAAM,SAAE2C,EAAeC,QAC3B,cAAG5C,GAAG,SAAQ,SAAE2C,EAAetC,YAR3BmC,IAahB,SAGA,gBAAKC,UAAU,cAAa,UAC5B,iBAAMI,SAjMe,SAAChB,GACxBA,EAAEiB,iBAGF,IAAM9B,EAAa,CACjBX,KAAOI,EAAYJ,KACnBC,IAAMG,EAAYH,IAClBC,KAAOI,EACPH,UAAY0B,EAAcvB,EAAaV,IAGtB,KAAfe,IACFtB,EAAOoB,KAAK,aAAcE,GAE1BN,EAAe,CACbL,KAAOhH,EACPiH,IAAM,KAGZ,EA8KqC,UAG/B,UAAC,KAAI,CAAChE,cAAc,MAAMZ,eAAe,SAASE,WAAW,SAAQ,WACrE,kBACEmH,KAAK,OACL1C,KAAK,MACL2C,MAAOvC,EAAYH,IACnB2C,YAAY,SACZC,SA9Ma,SAACrB,GACpBnB,GAAe,kBAAID,GAAW,cAAGoB,EAAEG,OAAO3B,KAAOwB,EAAEG,OAAOgB,QAC5D,KA8MM,SAAC,KAAM,CAACD,KAAK,SAAQ,uCAU/B,C","sources":["Component/Appbar/Appbar.tsx","Component/ChatIO/LiveChat.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"http://localhost:3000\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport { \r\n  Button, \r\n  Flex, \r\n  Text \r\n} from '@chakra-ui/react';\r\nimport io from 'socket.io-client';\r\nimport Axios from 'axios';\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport Appbar from \"../Appbar/Appbar.tsx\";\r\nimport './Chat.css';\r\n\r\nconst socket = io.connect(process.env.REACT_APP_MY_ENV_VAL);\r\n\r\nconst LiveChat = () => {\r\n\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    let navigate = useNavigate();\r\n    \r\n    const { emailLog, setEmailLog } = useContext(EmailUser);\r\n    const { roleUser, setRoleUser } = useContext(RoleUser);\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ room, setRoom ] = useState();\r\n    const [ socketId, setSocketId ] = useState(socket.id);\r\n    const [ showChat, setShowChat ] = useState(false);\r\n    const [ users, setUsers ] = useState([]);\r\n\r\n    const [messageList, setMessageList] = useState([]);\r\n\r\n    const [ chatMessage, setChatMessage ] = useState({name : \"\", msg: \"\", room : \"\", isPrivate : false});\r\n    const [ currentRoom, setCurrentRoom ] = useState(\"General Chat\");\r\n\r\n\r\n    const joinRoom = () => {\r\n        if (emailLog !== \"\" && room !== \"\") {\r\n          socket.emit(\"join_room\", room);\r\n          setShowChat(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n      socket.emit(\"userJoin\", emailLog);\r\n    }, [emailLog]);\r\n\r\n    socket.on(\"newMessage\", newMessage => {\r\n      console.log(\"Just ariived :\", newMessage);\r\n      setMessageList([...messageList, { name : newMessage.name, msg : newMessage.msg, isPrivate : newMessage.isPrivate }])\r\n    })\r\n\r\n    socket.on(\"userList\", userList => {\r\n      setUsers(userList);\r\n      setChatMessage({name : emailLog, msg : chatMessage.msg})\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n      setChatMessage({...chatMessage, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const newMessageSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      \r\n      const newMessage = {\r\n        name : chatMessage.name,\r\n        msg  :chatMessage.msg,\r\n        room : currentRoom,\r\n        isPrivate : isChatPrivate(currentRoom, users)\r\n      }\r\n      \r\n      if (newMessage !== \"\" ) {\r\n        socket.emit(\"newMessage\", newMessage)\r\n\r\n        setChatMessage({\r\n          name : emailLog,\r\n          msg : \"\"\r\n        })\r\n      } \r\n    }\r\n\r\n    useEffect(() => {\r\n        async function userExpire2 () {\r\n          const request = await  Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/login`)\r\n          .then((response)=> {\r\n            if(response.data.loggedIn === true) {\r\n              setEmailLog(response.data.email);\r\n              setRoleUser(response.data.role);\r\n            } else {\r\n              navigate(\"/\", {replace : true})\r\n            }\r\n          }, {withCredentials : true});\r\n          return request;\r\n        }\r\n        userExpire2();\r\n       }, [emailLog])\r\n\r\n\r\n       const enteringRoom = (e) => {\r\n        let oldRoom = currentRoom\r\n        let newRoom = e.target.textContent\r\n        setCurrentRoom(newRoom);\r\n        socket.emit(\"roomEntered\", { oldRoom, newRoom});\r\n        setMessageList([]);\r\n       }\r\n\r\n       const isChatPrivate = (roomName, userList) => {\r\n        let isPrivate = false\r\n        userList.forEach(userName => {\r\n          if(userName === roomName) {\r\n            isPrivate = true\r\n          }\r\n        })\r\n        return isPrivate\r\n       }\r\n   \r\n\r\n  return (\r\n//     <div className=\"App\">\r\n//     {!showChat ? (\r\n//       <>\r\n//       <div className=\"joinChatContainer\">\r\n//         <h3>Join A Chat</h3>\r\n//         <p>Value : {room}</p>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Username...\"\r\n//           value={emailLog}\r\n//           onChange={(event) => {\r\n//             setUsername(event.target.value);\r\n//           }}\r\n//           />\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Room ID\"\r\n//             value={room}\r\n//             onChange={(event) => {\r\n//               setRoom(event.target.value);\r\n//             }}\r\n//           />\r\n//         <button onClick={joinRoom}>Join A Room</button>\r\n//       </div>\r\n//       </>\r\n//     ) : (\r\n//       <Chat socket={socket} username={emailLog} room={room} />\r\n//     )}\r\n//   </div>\r\n    <>\r\n    <Appbar />\r\n    <Flex flexDirection=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n\r\n      <Flex flexDirection=\"column\" justifyContent={\"center\"} alignItems={\"center\"}>\r\n\r\n        <Flex flexDirection=\"column\" justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <Flex>\r\n            <Text>Chat Rooms : </Text>\r\n          </Flex>\r\n          <Flex>\r\n            <ul style={{listStyle : \"none\", cursor : \"pointer\"}}>\r\n              <li style={{display : \"flex\", justifyContent : \"center\"}} onClick={enteringRoom}>General Chat</li>\r\n              <li style={{display : \"flex\", justifyContent : \"center\"}} onClick={enteringRoom}>Apple</li>\r\n              <li style={{display : \"flex\", justifyContent : \"center\"}} onClick={enteringRoom}>Banana</li>\r\n              <li style={{display : \"flex\", justifyContent : \"center\"}} onClick={enteringRoom}>Melon</li>\r\n            </ul>\r\n          </Flex>\r\n        </Flex>\r\n       \r\n       \r\n        <Flex flexDirection=\"column\" justifyContent={\"center\"} alignItems={\"center\"} mt=\"20px\">\r\n          <Flex justifyContent={\"center\"} alignItems={\"center\"}>\r\n            <Text>User Online: </Text>\r\n          </Flex>\r\n          <Flex justifyContent={\"center\"} alignItems={\"center\"}>\r\n          <ul style={{listStyle : \"none\"}}>\r\n            {users.map((user, index) => {\r\n              return (\r\n                <>\r\n                <Flex justifyContent=\"center\" alignItems=\"center\" key={index}>\r\n                { user === emailLog ?\r\n                  <li style={{cursor : \"pointer\"}} key={user} onClick={enteringRoom}>\r\n                    {user}(you)\r\n                  </li>\r\n                  :\r\n                  <li style={{cursor : \"pointer\"}} key={user} onClick={enteringRoom}>{user}</li>\r\n                }\r\n                </Flex>\r\n                </>\r\n              )\r\n            })}\r\n          </ul>\r\n          </Flex>\r\n        </Flex>\r\n\r\n      </Flex>\r\n\r\n      <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n        {/* <Text marginTop=\"15px\">Chat Messages ({currentRoom})</Text>\r\n        <form onSubmit={newMessageSubmit}>\r\n          <Input type=\"text\" name=\"msg\" marginTop=\"20px\" width=\"300px\" value={chatMessage.msg} onChange={handleChange} />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </form>\r\n        <Text style={{border : \"1px solid black\", width : \"300px\", height: \"200px\"}} marginTop=\"10px\">\r\n          <ul style={{listStyle : \"none\"}}> \r\n            {messageList.map((messageList, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <b>{messageList.name}:</b> \r\n                  <i>\r\n                    <span style={{color : messageList.isPrivate ? \"red\" : \"black\"}}>\r\n                      {messageList.msg}\r\n                    </span>\r\n                  </i>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </Text> */}\r\n        <Flex>\r\n        <div className=\"chat-window\">\r\n          {currentRoom.length > 12 ? \r\n           <div className=\"chat-header1\">\r\n            <p>Chat Messages ({currentRoom})</p>\r\n           </div>\r\n           :\r\n          <div className=\"chat-header\">\r\n            <p>Chat Messages ({currentRoom})</p>\r\n          </div>\r\n          }\r\n        <div className=\"chat-body\">\r\n        <ScrollToBottom className=\"message-container\">\r\n          {messageList.map((messageContent, index) => {\r\n          return (\r\n            <div\r\n              className=\"message\"\r\n              id={emailLog === messageContent.name ? \"you\" : emailLog !== messageContent.name ? \"other\" : null}\r\n            >\r\n              <div key={index}>\r\n                <div className=\"message-content\">\r\n                  <span style={{color : messageContent.isPrivate ? \"red\" : \"white\"}}>\r\n                      {messageContent.msg}\r\n                  </span>\r\n                </div>\r\n                <div className=\"message-meta\">\r\n                  <p id=\"time\">{messageContent.time}</p>\r\n                    <p id=\"author\">{messageContent.name}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </ScrollToBottom>\r\n      </div>\r\n        <div className=\"chat-footer\">\r\n        <form onSubmit={newMessageSubmit}>\r\n          {/* <Input type=\"text\" name=\"msg\" marginTop=\"20px\" width=\"300px\" value={chatMessage.msg} onChange={handleChange} />\r\n          <Button type=\"submit\">Submit</Button> */}\r\n          <Flex flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"msg\"\r\n            value={chatMessage.msg}\r\n            placeholder=\"Hey...\"\r\n            onChange={handleChange} \r\n            />\r\n          <Button type=\"submit\">&#9658;</Button>\r\n          </Flex>\r\n          </form>\r\n        </div>\r\n        </div>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LiveChat"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","socket","io","process","navigate","useNavigate","useState","id","users","setUsers","messageList","setMessageList","name","msg","room","isPrivate","chatMessage","setChatMessage","currentRoom","setCurrentRoom","useEffect","emit","on","newMessage","console","log","userList","response","data","loggedIn","email","replace","withCredentials","request","userExpire2","enteringRoom","e","oldRoom","newRoom","target","textContent","isChatPrivate","roomName","forEach","userName","listStyle","user","index","className","length","messageContent","time","onSubmit","preventDefault","type","value","placeholder","onChange"],"sourceRoot":""}