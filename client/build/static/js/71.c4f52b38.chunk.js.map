{"version":3,"file":"static/js/71.c4f52b38.chunk.js","mappings":"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","sources":["Component/Appbar/Appbar.tsx","Component/Profile/Profile.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Button,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Avatar,\r\n  Center\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { IoLogOutSharp } from 'react-icons/io5'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const { isOpen, onToggle } = useDisclosure();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const { emailLog, setEmailLog } = useContext(EmailUser);\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n  const logout =  () => {\r\n    Axios.get('https://empty-test-project.herokuapp.com/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    navigate(\"/\", { replace : true });\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            color={useColorModeValue('gray.800', 'white')}>\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          <IconButton\r\n            aria-label=''\r\n            display={{ md: 'inline-flex' }}\r\n            fontSize={'sm'}\r\n            fontWeight={600}\r\n            color={'black'}\r\n            onClick={logout}\r\n          >\r\n            <IoLogOutSharp />\r\n          </IconButton>\r\n          {/* <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label=''>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'2xl'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <p>{emailLog}</p>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a href='/profile'>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  <MenuItem>Your Servers</MenuItem>\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu> */}\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            _groupHover={{ color: 'pink.400' }}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'BSI Vendor Registration',\r\n        href: 'https://bsivendorregistration.netlify.app/',\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Vendor PayG',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Up-and-coming Designers',\r\n        href: '#',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React from 'react'\r\nimport Appbar from '../Appbar/Appbar.tsx'\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div>\r\n    <Appbar />\r\n    Profile\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile"],"names":["Appbar","Axios","navigate","useNavigate","useDisclosure","isOpen","onToggle","useColorMode","colorMode","toggleColorMode","useContext","EmailUser","emailLog","setEmailLog","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","justifyContent","DesktopNav","direction","spacing","marginLeft","fontSize","fontWeight","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","replace","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","as","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft"],"sourceRoot":""}