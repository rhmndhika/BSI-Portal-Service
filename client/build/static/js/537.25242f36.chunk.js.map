{"version":3,"file":"static/js/537.25242f36.chunk.js","mappings":"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","sources":["Component/Appbar/Appbar.tsx","Component/OutsourcingPortal/OutsourcingDetail.js","Helper/OutsourcingPortalProvider.js","../node_modules/@chakra-ui/textarea/dist/index.esm.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"http://localhost:3000\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport { OutsourcingPortal } from '../../Helper/OutsourcingPortalProvider';\r\nimport Axios from 'axios';\r\nimport Appbar from '../Appbar/Appbar.tsx';\r\nimport {\r\n    Button,\r\n    Spinner,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Textarea,\r\n    Flex,\r\n    Text\r\n  } from '@chakra-ui/react'\r\nimport moment from 'moment';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Markup } from 'interweave';\r\n\r\nconst OutsourcingDetail = () => {\r\n    \r\n    Axios.defaults.withCredentials = true;\r\n\r\n    let navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const { emailLog, setEmailLog } = useContext(EmailUser);\r\n    const { roleUser, setRoleUser } = useContext(RoleUser);\r\n    const { outsourcingPortal, setOutsourcingPortal } = useContext(OutsourcingPortal);\r\n    const [ dataOutsourcingID, setDataOutsourcingID ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ isSaving, setIsSaving ] = useState(false);\r\n    const [ isSavingProgress, setIsSavingProgress ] = useState(false);\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    const { \r\n      isOpen: isOpenProgressModal, \r\n      onOpen: onOpenProgressModal, \r\n      onClose: onCloseProgressModal \r\n    } = useDisclosure()\r\n\r\n    \r\n    const initialRef = React.useRef(null)\r\n    const finalRef = React.useRef(null)\r\n\r\n    const updateDataOutsourcing = async (id, Name, IDLink, Supplier, User1, User2, RoleQuotation) => {\r\n\r\n        Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/update` , {\r\n          Name : outsourcingPortal.newName ? outsourcingPortal.newName : Name ,\r\n          IDLink :  outsourcingPortal.newIDLink ? outsourcingPortal.newIDLink : IDLink ,\r\n          Supplier : outsourcingPortal.newSupplier ? outsourcingPortal.newSupplier : Supplier ,\r\n          User1 : outsourcingPortal.newUser1 ? outsourcingPortal.newUser1 : User1 ,\r\n          User2 : outsourcingPortal.newUser2 ? outsourcingPortal.newUser2 : User2 ,\r\n          RoleQuotation : outsourcingPortal.newRoleQuotation ? outsourcingPortal.newRoleQuotation : RoleQuotation ,\r\n          id  : id\r\n        }).then(() => {\r\n          setIsSaving(true);\r\n          setTimeout(() => window.location.reload(false), 1200);\r\n        })\r\n      }\r\n\r\n      const updateMessageOutsourcing = async (id, Message) => {\r\n        await Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/update/message`, {\r\n          message : outsourcingPortal.newMessage ? outsourcingPortal.newMessage : Message,\r\n          id : id\r\n        }).then(() => {\r\n          setIsSavingProgress(true);\r\n          setTimeout(() => window.location.reload(false), 1200);\r\n        })\r\n      }\r\n\r\n      const updateStatusOutsourcing = (id, e) => {\r\n        Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/update/status`, {\r\n          status : e.target.value,\r\n          id : id\r\n        }).then(() => {\r\n          setTimeout(() => window.location.reload(false), 1000);\r\n        })\r\n      }\r\n      \r\n      function convertToPlain(html){\r\n\r\n        // Create a new div element\r\n        var tempDivElement = document.createElement(\"div\");\r\n        \r\n        // Set the HTML content with the given value\r\n        tempDivElement.innerHTML = html;\r\n        \r\n        // Retrieve the text property of the element \r\n        return tempDivElement.textContent || tempDivElement.innerText || \"\";\r\n      }      \r\n\r\n      useEffect(() => {\r\n\r\n        async function userExpire2 () {\r\n          const request = await  Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/login`)\r\n          .then((response)=> {\r\n            if(response.data.loggedIn === true) {\r\n              setEmailLog(response.data.email);\r\n              setRoleUser(response.data.role)\r\n            } else {\r\n              navigate(\"/\", {replace : true})\r\n            }\r\n          }, {withCredentials : true});\r\n          return request;\r\n        }\r\n        userExpire2();\r\n       }, [emailLog])\r\n\r\n    useEffect(() => {\r\n        const cancelToken = Axios.CancelToken.source();\r\n  \r\n        Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/outsourcing/${id}`, {\r\n          cancelToken : cancelToken.token,\r\n        }).then((response) => {\r\n          setDataOutsourcingID(response.data);\r\n          setIsLoading(false);\r\n        }).catch((err) => {\r\n          if (Axios.isCancel(err)){\r\n            console.log(\"canceled\");\r\n          } else {\r\n            console.log(\"not canceled\")\r\n          }\r\n        });\r\n  \r\n  \r\n        return () => {\r\n          cancelToken.cancel();\r\n        }   \r\n       }, [id])\r\n      \r\n  return (\r\n    <>\r\n      <Modal\r\n        initialFocusRef={initialRef}\r\n        finalFocusRef={finalRef}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        closeOnOverlayClick={false}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n        <ModalHeader>Edit Data</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody pb={6}>        \r\n\r\n          <FormControl mt={4}>\r\n            <FormLabel>New Name</FormLabel>\r\n            <Input type=\"text\" value={outsourcingPortal.newName ? outsourcingPortal.newName : dataOutsourcingID.Name } \r\n            onChange={(e) => {\r\n              setOutsourcingPortal({...outsourcingPortal, newName : e.target.value})\r\n            }}/>\r\n          </FormControl>\r\n\r\n          <FormControl mt={4}>\r\n            <FormLabel>New ID Link</FormLabel>\r\n            <Input type=\"text\" value={outsourcingPortal.newIDLink ? outsourcingPortal.newIDLink : dataOutsourcingID.IDLink } \r\n            onChange={(e) => {\r\n              setOutsourcingPortal({...outsourcingPortal, newIDLink : e.target.value})\r\n            }}/>\r\n          </FormControl>\r\n\r\n          <FormControl mt={4}>\r\n            <FormLabel>New Supplier</FormLabel>\r\n            <Input type=\"text\" value={outsourcingPortal.newSupplier ? outsourcingPortal.newSupplier : dataOutsourcingID.Supplier } \r\n            onChange={(e) => {\r\n              setOutsourcingPortal({...outsourcingPortal, newSupplier : e.target.value})\r\n            }}/>\r\n          </FormControl>\r\n\r\n          <FormControl mt={4}>\r\n            <FormLabel>New User 1</FormLabel>\r\n            <Input type=\"text\" value={outsourcingPortal.newUser1 ? outsourcingPortal.newUser1 : dataOutsourcingID.User1 } \r\n            onChange={(e) => {\r\n              setOutsourcingPortal({...outsourcingPortal, newUser1 : e.target.value})\r\n            }}/>\r\n          </FormControl>\r\n\r\n          <FormControl mt={4}>\r\n            <FormLabel>New User 2</FormLabel>\r\n            <Input type=\"text\" value={outsourcingPortal.newUser2 ? outsourcingPortal.newUser2 : dataOutsourcingID.User2 } \r\n            onChange={(e) => {\r\n              setOutsourcingPortal({...outsourcingPortal, newUser2 : e.target.value})\r\n            }}/>\r\n          </FormControl>\r\n\r\n          <FormControl mt={4}>\r\n            <FormLabel>New Role Quotation</FormLabel>\r\n            <Input type=\"text\" value={outsourcingPortal.newRoleQuotation ? outsourcingPortal.newRoleQuotation : dataOutsourcingID.RoleQuotation } \r\n            onChange={(e) => {\r\n              setOutsourcingPortal({...outsourcingPortal, newRoleQuotation : e.target.value})\r\n            }}/>\r\n          </FormControl>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {isSaving === false ? \r\n          <Button width={\"100px\"} colorScheme='blue' mr={3} \r\n          onClick={() => {updateDataOutsourcing(\r\n            dataOutsourcingID._id, dataOutsourcingID.Name, dataOutsourcingID.IDLink, dataOutsourcingID.Supplier, dataOutsourcingID.User1,\r\n            dataOutsourcingID.User2, dataOutsourcingID.RoleQuotation)\r\n          }}\r\n          >\r\n          Save\r\n          </Button>\r\n          :\r\n          <Button\r\n          isLoading\r\n          loadingText='Saving'\r\n          colorScheme='blue'\r\n          variant='outline'\r\n          width={\"100px\"}\r\n          mr={3}\r\n          marginLeft={\"1px\"}\r\n          >\r\n          Saving\r\n          </Button>\r\n          }\r\n         <Button width={\"100px\"} onClick={onClose}>Cancel</Button>\r\n      </ModalFooter>\r\n      </ModalContent>            \r\n      </Modal>\r\n      <Modal closeOnOverlayClick={false} isOpen={isOpenProgressModal} onClose={onCloseProgressModal}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Write your progress here</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n           <Textarea placeholder='Here is a sample placeholder' value={outsourcingPortal.newMessage ? outsourcingPortal.newMessage : dataOutsourcingID.Message} onChange={(e) => {\r\n            setOutsourcingPortal({...outsourcingPortal, newMessage : e.target.value})\r\n           }}  />\r\n            <Text fontSize='sm' marginTop=\"5px\"><i>Please write in list format</i></Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            {isSavingProgress === false ?\r\n            <Button type='submit' colorScheme='blue' mr={3} onClick={() => {updateMessageOutsourcing(\r\n              dataOutsourcingID._id, dataOutsourcingID.Message)\r\n            }}>\r\n              Save\r\n            </Button>\r\n            :\r\n            <Button\r\n            isLoading\r\n            loadingText='Saving'\r\n            colorScheme='blue'\r\n            variant='outline'\r\n            width={\"100px\"}\r\n            mr={3}\r\n            marginLeft={\"1px\"}\r\n            >\r\n            Saving\r\n            </Button>\r\n            }\r\n            <Button onClick={onCloseProgressModal} mr={3}>Cancel</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    <Appbar />\r\n    <Flex \r\n      justifyContent=\"center\"\r\n      marginTop=\"30px\"\r\n    >\r\n    { roleUser === \"Admin\" \r\n      ? null\r\n      : <>\r\n          { dataOutsourcingID.status === \"Approved\" || dataOutsourcingID.status === \"Rejected\"\r\n             ?  null\r\n             :   <Button width={\"140px\"} onClick={onOpen}>Edit Data</Button>\r\n          }\r\n          </>\r\n    }    \r\n\r\n    { roleUser === \"Admin\" \r\n      ? null\r\n      : <>\r\n          { dataOutsourcingID.status === \"Approved\" || dataOutsourcingID.status === \"Rejected\"\r\n            ?  null\r\n            :  <Button width={\"140px\"} onClick={onOpenProgressModal} marginLeft={\"30px\"}>Update Progress</Button>\r\n          }\r\n        </>\r\n     }  \r\n\r\n     \r\n      \r\n    </Flex>\r\n    {isLoading ?\r\n        <div style={{display : \"flex\", flexDirection : \"column\", justifyContent : \"center\", alignItems : \"center\", marginTop : \"20px\"}}>\r\n          <Spinner />\r\n        </div>\r\n        :\r\n        <div style={{display : \"flex\", flexDirection : \"column\", marginTop : \"20px\", marginLeft : \"30px\"}}>\r\n          <div>\r\n          <p>ID               : {dataOutsourcingID._id}</p>\r\n          <p>Email            : {dataOutsourcingID.Email}</p>\r\n          <p>Name             : {dataOutsourcingID.Name}</p>\r\n          <p>ID Link          : {dataOutsourcingID.IDLink}</p>\r\n          <p>Supplier         : {dataOutsourcingID.Supplier}</p>\r\n          <p>User-1           : {dataOutsourcingID.User1}</p>\r\n          <p>User-2           : {dataOutsourcingID.User2}</p>\r\n          <p>Role Quotation   : {dataOutsourcingID.RoleQuotation}</p>\r\n          <p className='textMessage'>Attachments      : {dataOutsourcingID.OutsourcingAttachments}</p>\r\n          <p>Created          : {moment(dataOutsourcingID.createdAt).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n          <p>Updated          : {moment(dataOutsourcingID.createdAt).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n          <p>Progress         : {dataOutsourcingID.Message}</p>\r\n          <p>Status           : {dataOutsourcingID.status}</p>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n          {!dataOutsourcingID.status  ?\r\n              <>\r\n              {roleUser === \"Admin\" ? \r\n              <div style={{display : \"flex\", flexDirection : \"row\", justifyContent : \"center\", alignItems : \"center\", marginTop : \"30px\"}}>\r\n                <Button width={100} name=\"status\" value=\"Approved\" onClick={(e) => {\r\n                  updateStatusOutsourcing(dataOutsourcingID._id, e)\r\n                }}>Approve</Button>\r\n\r\n                <Button width={100} marginLeft={30} name=\"status\" value=\"Rejected\" onClick={(e) => {\r\n                  updateStatusOutsourcing(dataOutsourcingID._id, e)\r\n                }}>Reject</Button>\r\n              </div>\r\n              :\r\n              null\r\n              }\r\n              </>\r\n              :\r\n              null\r\n          }     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default OutsourcingDetail","import React from 'react';\r\nimport {createContext, useState} from \"react\"\r\nexport const OutsourcingPortal = createContext();\r\nexport default function OutsourcingPortalProvider({children}) {\r\n  const [outsourcingPortal, setOutsourcingPortal] = useState({\r\n    email : \"\",\r\n    name : \"\",\r\n    idLink : \"\",\r\n    supplier : \"\",\r\n    user1 : \"\",\r\n    user2 : \"\",\r\n    roleQuotation : \"0\",\r\n    fileOutsourcing : [],\r\n    message : \"Current Progress\",\r\n    status : \"\",\r\n\r\n    newName : \"\",\r\n    newIDLink : \"\",\r\n    newSupplier : \"\",\r\n    newUser1 : \"\",\r\n    newUser2 : \"\",\r\n    newRoleQuotation : \"\",\r\n    newMessage : \"\"\r\n  });\r\n  return (\r\n    <OutsourcingPortal.Provider value={{ outsourcingPortal, setOutsourcingPortal }}>\r\n     {children}\r\n    </OutsourcingPortal.Provider>\r\n  );\r\n}","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ React.createElement(chakra.textarea, {\n    ref,\n    rows,\n    ...textareaProps,\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  });\n});\nTextarea.displayName = \"Textarea\";\nexport {\n  Textarea\n};\n"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","navigate","useNavigate","id","useParams","OutsourcingPortal","outsourcingPortal","setOutsourcingPortal","useState","dataOutsourcingID","setDataOutsourcingID","isLoading","setIsLoading","isSaving","setIsSaving","isSavingProgress","setIsSavingProgress","onOpen","onClose","isOpenProgressModal","onOpenProgressModal","onCloseProgressModal","initialRef","React","finalRef","updateDataOutsourcing","Name","IDLink","Supplier","User1","User2","RoleQuotation","process","newName","newIDLink","newSupplier","newUser1","newUser2","newRoleQuotation","reload","updateMessageOutsourcing","Message","message","newMessage","updateStatusOutsourcing","e","status","target","value","useEffect","response","data","loggedIn","email","replace","withCredentials","request","userExpire2","cancelToken","token","catch","err","console","log","cancel","initialFocusRef","finalFocusRef","closeOnOverlayClick","pb","type","onChange","width","colorScheme","mr","_id","loadingText","placeholder","Email","className","OutsourcingAttachments","moment","createdAt","format","name","createContext","OutsourcingPortalProvider","idLink","supplier","user1","user2","roleQuotation","fileOutsourcing","Provider","cx","classNames","filter","Boolean","join","omitted","Textarea","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rows","rest","textareaProps","useFormControl","textareaStyles","object","keysToOmit","clone","Object","key","omit","chakra","__css","displayName"],"sourceRoot":""}