{"version":3,"file":"static/js/506.8a15b844.chunk.js","mappings":"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","sources":["Component/Appbar/Appbar.tsx","Pages/SocialMedia.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"http://localhost:3000\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React, { useEffect, useContext, useState, useRef, useMemo } from 'react';\r\nimport { EmailUser } from '../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../Helper/RoleUserProvider';\r\nimport { ProfileSosmed } from '../Helper/ProfileSosmedProvider';\r\nimport { PostSosmed } from '../Helper/PostSosmed';\r\nimport Appbar from '../Component/Appbar/Appbar.tsx';\r\nimport Axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { \r\n    Box,\r\n    Avatar,\r\n    Heading,\r\n    Text,\r\n    IconButton,\r\n    Button,\r\n    Stack,\r\n    StackDivider,\r\n    Input,\r\n    InputGroup,\r\n    InputLeftElement,\r\n    Flex,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    Textarea,\r\n    Spinner,\r\n    AlertDialog,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay,\r\n    FormHelperText,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverBody,\r\n    PopoverArrow,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuDivider,\r\n    Center,\r\n    AvatarGroup,\r\n    Tooltip\r\n} from '@chakra-ui/react';\r\nimport { \r\n  Card, \r\n  CardHeader, \r\n  CardBody, \r\n  CardFooter \r\n} from '@chakra-ui/card'\r\nimport { \r\n  AddIcon,\r\n  DeleteIcon,\r\n  EditIcon,\r\n  SearchIcon\r\n} from '@chakra-ui/icons';\r\nimport {\r\n  BsChat\r\n} from 'react-icons/bs';\r\nimport {\r\n  BiLike\r\n} from 'react-icons/bi';\r\nimport {\r\n  AiFillLike,\r\n  AiOutlineLike,\r\n  AiOutlineDislike\r\n} from 'react-icons/ai';\r\nimport { BsThreeDotsVertical, BsChatSquareQuote } from 'react-icons/bs';\r\nimport { RiShutDownLine, RiRestartLine, RiFileShredLine } from 'react-icons/ri';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport parse from 'html-react-parser';\r\nimport './SocialMedia.css';\r\n\r\nconst SocialMedia = () => {\r\n\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    let navigate = useNavigate();\r\n    \r\n    const { emailLog, setEmailLog } = useContext(EmailUser);\r\n    const { roleUser, setRoleUser } = useContext(RoleUser);\r\n    const { profileSosmed, setProfileSosmed } = useContext(ProfileSosmed);\r\n    const { postSosmed, setPostSosmed } = useContext(PostSosmed);\r\n    const [ profileUser, setProfileUser ] = useState([]);\r\n    const [ profileList, setProfileList ] = useState([]);\r\n    const [ postList, setPostList ] = useState([]);\r\n    const [ image, setImage ] = useState(null);\r\n    const [ imagePost, setImagePost ] = useState(null);\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [ currentID, setCurrentID ] = useState(\"\");\r\n    const [ search, setSearch ] = useState(\"\");\r\n    const [ likeCount, setLikeCount ] = useState([]);\r\n    const [ text, setText ] = useState(\"\");\r\n    const [ postID, setPostID ] = useState(\"\");\r\n    const [ value, setValue ] = useState('');\r\n    const [ isSaving, setIsSaving ] = useState(false);\r\n    const [ isSavingProfile, setIsSavingProfile ] = useState(false);\r\n  \r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const { \r\n        isOpen  : isOpenPostModal, \r\n        onOpen  : onOpenPostModal, \r\n        onClose : onClosePostModal \r\n    } = useDisclosure()\r\n\r\n    const { \r\n        isOpen  : isOpenAlertDialog, \r\n        onOpen  : onOpenAlertDialog, \r\n        onClose : onCloseAlertDialog\r\n     } = useDisclosure()\r\n\r\n     const { \r\n      isOpen  : isOpenCommentDialog, \r\n      onOpen  : onOpenCommentDialog, \r\n      onClose : onCloseCommentDialog\r\n   } = useDisclosure()\r\n\r\n    const cancelRef = React.useRef();\r\n    const initialRef = React.useRef(null);\r\n    const finalRef = React.useRef(null);\r\n\r\n    const onImageChange = (event) => {\r\n      if (event.target.files && event.target.files[0]) {\r\n        setImage(URL.createObjectURL(event.target.files[0]));\r\n        setProfileSosmed({...profileSosmed, profilePicture : event.target.files[0]})\r\n      }\r\n    }\r\n\r\n    const onImageChangePost = (event) => {\r\n      if (event.target.files && event.target.files[0]) {\r\n        setImagePost(URL.createObjectURL(event.target.files[0]));\r\n        setPostSosmed({...postSosmed, documents : event.target.files[0]})\r\n       }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function userExpire2 () {\r\n          const request = await  Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/login`)\r\n          .then((response)=> {\r\n            if(response.data.loggedIn === true) {\r\n              setEmailLog(response.data.email);\r\n              setRoleUser(response.data.role);\r\n            } else {\r\n              navigate(\"/\", {replace : true})\r\n            }\r\n          }, {withCredentials : true});\r\n          return request;\r\n        }\r\n        userExpire2();\r\n       }, [emailLog])\r\n\r\n    const createProfile = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('FullName', profileSosmed.fullName);\r\n        formData.append('Username', emailLog);\r\n        formData.append('ProfilePicture', profileSosmed.profilePicture);\r\n        formData.append('Bio', profileSosmed.bio);\r\n        \r\n        await fetch(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/profile/create`, {\r\n            method: 'POST',\r\n            body: formData,\r\n        }).then((response) => {\r\n            setIsSavingProfile(true);\r\n            setTimeout(() => window.location.reload(false), 1000);\r\n        })\r\n    }\r\n\r\n    const submitPost = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('Username', emailLog);\r\n        formData.append('Content', value);\r\n        formData.append('Documents', postSosmed.documents);\r\n        formData.append('Author', profileUser._id);\r\n\r\n        if (value === \"\") {\r\n          alert(\"Please input the content\")\r\n        } else { \r\n          await fetch(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/post`, {\r\n            method : \"POST\",\r\n            body: formData,\r\n          }).then((response) => {\r\n            setIsSaving(true);\r\n            setTimeout(() => window.location.reload(false), 1000);\r\n          })\r\n        }\r\n    }\r\n\r\n    const getAllPost = () => {\r\n        Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/post/all`).then((response) => {\r\n            setPostList(response.data);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const getAllProfile = () => {\r\n      Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/profile/all`).then((response) => {\r\n          setProfileList(response.data);\r\n          setIsLoading(false);\r\n      })\r\n    }\r\n\r\n    const getProfile = () => {\r\n      Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/profile/email`).then((response) => {\r\n          setProfileUser(response.data);\r\n          setIsLoading(false);\r\n      })\r\n    }\r\n\r\n    const deleteCurrentID = () => {\r\n       Axios.delete(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/post/delete/${currentID}`).then(() => {\r\n        setPostList(postList.filter((val) => {\r\n          return val._id != currentID\r\n        }))\r\n        onCloseAlertDialog();\r\n      }); \r\n    }\r\n\r\n    const deleteProfile = async () => {\r\n      await Axios.delete(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/profile/${profileUser._id}/delete`).then(() => {\r\n        setTimeout(() => window.location.reload(false), 1000)\r\n      })\r\n    }\r\n\r\n    const LikePost = (id) => {\r\n      Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/${id}/like`, {\r\n        Likes : profileUser._id\r\n      }).then((response) => {\r\n        setLikeCount(response.data);\r\n      })\r\n    }\r\n  \r\n    const UnlikePost = (id) => {\r\n      Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/${id}/unlike`, {\r\n        Likes : profileUser._id\r\n      }).then((response) => {\r\n        setLikeCount(response.data);\r\n      })\r\n    }\r\n\r\n    const submitComment = async (e) => {\r\n\r\n      e.preventDefault();\r\n      if (text !== \"\" ) {\r\n        Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/socialmedia/post/${postID}/comment` , {\r\n          Text : text,\r\n          PostedBy : profileUser._id\r\n          })\r\n      } else {\r\n        alert(\"Cannot be Empty\")\r\n      }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      getProfile();\r\n      getAllProfile();\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n      getAllPost();\r\n    }, [likeCount])\r\n    \r\n\r\n  return (\r\n   <>\r\n    <Appbar />\r\n    {/* Alert Delete */}\r\n    <AlertDialog\r\n        isOpen={isOpenAlertDialog}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onCloseAlertDialog}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize='lg' fontWeight='bold'>\r\n              Delete Post\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onCloseAlertDialog}>\r\n                Cancel\r\n              </Button>\r\n              <Button colorScheme='red' onClick={deleteCurrentID} ml={3}>\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n\r\n    {/* Modal CreatePost */}\r\n    <Modal\r\n        isOpen={isOpenPostModal}\r\n        onClose={onClosePostModal}\r\n        closeOnOverlayClick={false}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create your post</ModalHeader>\r\n          <ModalCloseButton />\r\n          <form method='POST' onSubmit={submitPost}>\r\n          <ModalBody pb={6}>\r\n            <FormControl isRequired>\r\n              <FormLabel>Username</FormLabel>\r\n              <Input value={emailLog} disabled />\r\n            </FormControl>\r\n\r\n            <FormControl isRequired>\r\n              <FormLabel>Profile ID</FormLabel>\r\n              <Input value={profileUser._id} disabled />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4} isRequired>\r\n              <FormLabel>Content</FormLabel>\r\n              <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n              <FormHelperText><i>*Please add http:// or https:// if you want to input a link</i></FormHelperText>\r\n            </FormControl>\r\n\r\n            <FormControl mt={4}>\r\n              <FormLabel>Picture</FormLabel>\r\n              <Input type=\"file\"  name=\"documents\" onChange={onImageChangePost} />\r\n              <img src={imagePost} alt=\"preview document post\" />\r\n            </FormControl>\r\n\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n          {isSaving === true ? \r\n            <Button\r\n            isLoading\r\n            loadingText='Saving'\r\n            colorScheme='blue'  \r\n            variant='outline'\r\n            spinnerPlacement='start'\r\n            mr=\"10px\"\r\n            >\r\n            Saving \r\n            </Button>\r\n          :\r\n            <Button type='submit' colorScheme='blue' mr={3}>\r\n              Save\r\n            </Button>\r\n          }\r\n            <Button onClick={onClosePostModal}>Cancel</Button>\r\n          </ModalFooter>\r\n          </form>\r\n        </ModalContent>\r\n    </Modal>\r\n\r\n    {/* Profile Modal  */}\r\n\r\n    <Modal\r\n        initialFocusRef={initialRef}\r\n        finalFocusRef={finalRef}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        closeOnOverlayClick={false}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create your Profile</ModalHeader>\r\n          <ModalCloseButton />\r\n          <form onSubmit={createProfile}>\r\n          <ModalBody pb={6}>\r\n            <FormControl isRequired>\r\n              <FormLabel>Full Name</FormLabel>\r\n              <Input ref={initialRef} placeholder='Full Name' value={profileSosmed.fullName} name=\"fullName\" onChange={(e) => {\r\n                setProfileSosmed({...profileSosmed, fullName : e.target.value})\r\n              }} />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4} isRequired>\r\n              <FormLabel>Username</FormLabel>\r\n              <Input value={emailLog} disabled name=\"fullName\" onChange={(e) => {\r\n                setProfileSosmed({...profileSosmed, username : e.target.value})\r\n              }}/>\r\n            </FormControl>\r\n\r\n            <FormControl mt={4} isRequired>\r\n              <FormLabel>Bio</FormLabel>\r\n              <Textarea value={profileSosmed.Bio} name=\"bio\" onChange={(e) => {\r\n                setProfileSosmed({...profileSosmed, bio : e.target.value})\r\n              }}  />\r\n            </FormControl>\r\n\r\n            <FormControl mt={4} isRequired>\r\n              <FormLabel>Profile Picture</FormLabel>\r\n              <Input type=\"file\" name=\"ProfilePicture\" onChange={onImageChange}/>\r\n              <img src={image} alt=\"preview image\" />\r\n            </FormControl>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n          { isSavingProfile === false ? \r\n            <Button type='submit' colorScheme='blue' mr={3}>\r\n              Save\r\n            </Button>\r\n          :\r\n            <Button\r\n              isLoading\r\n              loadingText='Saving'\r\n              colorScheme='blue'\r\n              variant='outline'\r\n              spinnerPlacement='start'\r\n              mr=\"10px\"\r\n            >\r\n              Saving\r\n            </Button>\r\n          }\r\n            <Button onClick={onClose}>Cancel</Button>\r\n          </ModalFooter>\r\n          </form>\r\n        </ModalContent>\r\n      </Modal>\r\n    <>  \r\n\r\n    {/* Modal Create Comment */}\r\n    {postList.map((i, index) => (\r\n    <Modal closeOnOverlayClick={false}  isOpen={isOpenCommentDialog} onClose={onCloseCommentDialog} key={i._id}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Comments</ModalHeader>\r\n          <ModalCloseButton />\r\n          <form onSubmit={submitComment}>\r\n          <ModalBody>\r\n            {i.Comments.map((x) => (\r\n              <Flex flexDirection=\"row\" mt=\"5px\">\r\n                <Text key={x._id} paddingLeft=\"10px\">{x.PostedBy} : </Text>\r\n                <Text key={x._id} paddingLeft=\"10px\">{x.Text}</Text>\r\n              </Flex> \r\n            )\r\n            )}\r\n            <Input type=\"text\" value={text} placeholder='Comment Here' mt=\"10px\" onChange={(e) => setText(e.target.value)}  />\r\n            <Input type=\"text\" defaultValue={profileUser._id} display=\"none\" disabled />\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button type=\"submit\" mr={3}>Comment</Button>\r\n            <Button colorScheme='blue' onClick={onCloseCommentDialog}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n          </form>\r\n        </ModalContent>\r\n      </Modal>\r\n      )\r\n    )}\r\n\r\n       {/* Header for Mobile Version */}\r\n        <Flex className=\"flex-nav-1\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" width=\"full\" height=\"80px\">\r\n            <Flex justifyContent=\"center\" alignItems=\"center\"  height=\"60px\" margin=\"20px 10px 20px 10px\">\r\n              <Flex width=\"320px\" height=\"60px\" borderRadius=\"40px\" shadow=\"base\">\r\n              <InputGroup margin=\"10px\">\r\n              <InputLeftElement\r\n              pointerEvents='none'\r\n              children={<SearchIcon color='black.300' />}/>\r\n              <Input backgroundColor=\"gray.100\" textColor=\"black.300\" borderRadius=\"50px\" width=\"180px\" type='text' placeholder='Search....'  onChange={(e) => setSearch(e.target.value)} />\r\n              </InputGroup>\r\n                    {profileUser.length <= 0 ? <Button borderRadius=\"30px\" onClick={onOpen} mt=\"10px\" mr=\"20px\">New</Button> : \r\n                    <Flex gap=\"-10px\" justifyContent=\"center\">\r\n                    { profileUser ? \r\n                    <IconButton \r\n                      variant=\"outline\"\r\n                      colorScheme=\"black.100\"\r\n                      aria-label=\"create post\"\r\n                      rounded=\"full\"  \r\n                      mt=\"10px\"\r\n                      icon={<AddIcon />}\r\n                      onClick={onOpenPostModal}/>\r\n                    :\r\n                    null\r\n                    }\r\n                    <Menu>\r\n                    <MenuButton\r\n                      as={Button}\r\n                      rounded={'full'}\r\n                      variant={'link'}\r\n                      cursor={'pointer'}\r\n                      mr={'15px'}\r\n                      minW={0}>\r\n                    <Avatar size='md' name={profileUser.FullName} margin=\"5px\" crossOrigin=\"anonymous\" src={profileUser.ProfilePicture} />{' '}\r\n                    </MenuButton>\r\n                    <MenuList alignItems={'center'} borderRadius=\"20px\">\r\n                      <br />\r\n                      <Center>\r\n                        <Flex flexDirection=\"column\" >\r\n                          <Flex>\r\n                            <Text>👋Hey, {profileUser.FullName}</Text>\r\n                          </Flex>\r\n                        </Flex>\r\n                      </Center>\r\n                      <br />\r\n                      <MenuDivider />\r\n                      <a href={`/socialmedia/profile/${profileUser._id}`}>\r\n                      <MenuItem>Profile Settings</MenuItem>\r\n                      </a>\r\n                    </MenuList>\r\n                    </Menu>\r\n                    </Flex>\r\n                    }\r\n              </Flex>\r\n            </Flex>\r\n            {/* { profileUser ? \r\n            <Flex flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" height=\"60px\" margin=\"20px 10px 20px 10px\">\r\n              <Button  onClick={onOpenPostModal} width={120}>Create Post</Button>\r\n            </Flex>\r\n            :\r\n            null\r\n            } */}\r\n        </Flex>\r\n        \r\n\r\n        \r\n        <Flex className='flexContainerSM' flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\" padding=\"30px\">\r\n        {/* Profile Component */}\r\n            <Flex className='flex-item-1' flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                       \r\n                <Flex width=\"280px\" height=\"150px\" padding=\"10px\" marginTop=\"25px\" border=\"1px solid\">\r\n                <Card width=\"320px\" marginTop=\"10px\">\r\n                <CardBody>\r\n                    <Stack divider={<StackDivider />} spacing='4'>\r\n                    <Box cursor=\"pointer\">\r\n                        <Heading size='xs' textTransform='uppercase'>\r\n                        Profile\r\n                        </Heading>\r\n                    </Box>\r\n                    <Box cursor=\"pointer\">\r\n                        <Heading size='xs' textTransform='uppercase'>\r\n                        Your Post\r\n                        </Heading>\r\n                    </Box>\r\n                    <Box cursor=\"pointer\">\r\n                        <Heading size='xs' textTransform='uppercase'>\r\n                        IDK\r\n                        </Heading>\r\n                    </Box>\r\n                    </Stack>\r\n                </CardBody>\r\n                </Card>\r\n                </Flex>\r\n                { profileUser ? \r\n                <Button \r\n                  marginTop=\"20px\"\r\n                  size=\"md\"\r\n                  width=\"full\"\r\n                  colorScheme=\"facebook\"\r\n                  onClick={onOpenPostModal}>\r\n                Create Post\r\n                </Button>\r\n                :\r\n                <Flex>\r\n                  <Text>Create profile first</Text>\r\n                </Flex>\r\n                }\r\n            </Flex>\r\n            \r\n            {/* Card Post Social Media */}\r\n            { isLoading === false ? \r\n            <Flex className='flex-item-2'  flexDirection=\"column\">\r\n                { postList.length <= 0 ? null : postList.filter(i => \r\n                i.Author.FullName.toLowerCase().includes(search) \r\n                ).map((i, index) => {\r\n                return (\r\n                <Flex marginTop=\"15px\">\r\n                    <Card shadow=\"lg\" padding=\"10px\" borderRadius=\"25px\" key={i._id}>\r\n                    <CardHeader>\r\n                        <Flex spacing='4' borderRadius=\"20px\">\r\n                        <Flex flex='1' gap='4' alignItems='center' flexWrap='wrap'>\r\n                            <Avatar src={i.Author.ProfilePicture} />  \r\n                            <Box>\r\n                            <Heading size='sm'>{i.Author.FullName}</Heading>\r\n                            <Text>{moment(i.createdAt).format('MMMM Do YYYY, h:mm:ss a')}</Text>\r\n                            {/* <Text>{moment(i.createdAt).startOf('day').fromNow()}</Text> */}\r\n                            </Box>\r\n                        </Flex>\r\n                        <Link to={`/socialmedia/${i._id}`}>\r\n                          <IconButton\r\n                          variant='ghost'\r\n                          colorScheme='gray'\r\n                          aria-label='See menu' \r\n                          icon={<EditIcon />}\r\n                          />\r\n                        </Link>\r\n                        { i.Username === emailLog \r\n                        ?\r\n                        <IconButton\r\n                        variant='ghost'\r\n                        colorScheme='gray'\r\n                        aria-label='See menu'\r\n                        onClick={() => {\r\n                          setCurrentID(i._id);\r\n                          onOpenAlertDialog(i._id);\r\n                        }}\r\n                        icon={<DeleteIcon />}\r\n                        />\r\n                         :\r\n                        null\r\n                        }\r\n                        </Flex>\r\n                    </CardHeader>\r\n                    <Text marginTop={30}>\r\n                        {i.Title}\r\n                    </Text>\r\n                    { i.Documents?.includes(\"png\", \"jpg\", \"jpeg\", \"svg\", \"apng\") ?\r\n                      <img\r\n                        className='docPost'\r\n                        src={i.Documents}\r\n                        alt=''\r\n                      />\r\n                    : i.Documents?.includes(\"mp4\") ? \r\n                     <video \r\n                        className='docPost'\r\n                        src={i.Documents}\r\n                        controls\r\n                      />                      \r\n                    :\r\n                      <img\r\n                      className='docPost'\r\n                      src={i.Documents}\r\n                      alt=''\r\n                    />\r\n                    }\r\n                    <CardBody>\r\n                      <Text paddingTop=\"15px\" ml=\"20px\" mb=\"20px\">\r\n                      {parse(i.Content)}\r\n                     \r\n                      </Text>\r\n                    </CardBody>\r\n                    <CardFooter\r\n                        justify='space-between'\r\n                        flexWrap='wrap'\r\n                    >            \r\n                    {/* All user can like infinitely */}\r\n                      {i.Likes._id === profileUser._id ?\r\n                        <Button key={index} flex='1' variant='ghost' rightIcon={<AiFillLike />} leftIcon={`${Object.keys(i.Likes).length}`} onClick={() => UnlikePost(i._id)}>Liked</Button>\r\n                        :\r\n                        <>\r\n                        <Button key={index} flex='1' variant='ghost' rightIcon={<AiOutlineLike />} leftIcon={`${Object.keys(i.Likes).length}`} onClick={() => LikePost(i._id)}>Like</Button>\r\n                        <AvatarGroup size='sm' max={3}>\r\n                        {i.Likes.map((x) => {\r\n                          return (\r\n                            <Tooltip label={x.FullName}>\r\n                              <Avatar key={x._id} size=\"sm\" name={x.FullName} src={x.ProfilePicture} cursor=\"pointer\" />\r\n                            </Tooltip>\r\n                            )\r\n                          })}\r\n                        </AvatarGroup>  \r\n                        </>\r\n                      }\r\n                      <Button flex='1' variant='ghost' leftIcon={<BsChat />} onClick={() => {\r\n                        setPostID(i._id);\r\n                        onOpenCommentDialog(i._id);\r\n                      }}>\r\n                      Comment</Button>\r\n                    </CardFooter>\r\n                    </Card>\r\n                </Flex>\r\n                )\r\n            })}\r\n            </Flex>\r\n            :\r\n            <Spinner mt={150} />\r\n            }      \r\n\r\n            {/* Right Side Component : Who to find and Trending Post */}\r\n            \r\n            <Flex className='flex-item-3' flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" width=\"350px\">\r\n            <Flex className=\"searchWEBV\" width=\"320px\" height=\"60px\" borderRadius=\"40px\" shadow=\"base\">\r\n              <InputGroup margin=\"10px\">\r\n              <InputLeftElement\r\n              pointerEvents='none'\r\n              children={<SearchIcon color='black.300' />}/>\r\n              <Input backgroundColor=\"gray.100\" textColor=\"black.300\" borderRadius=\"50px\" width=\"230px\" type='text' placeholder='Search....'  onChange={(e) => setSearch(e.target.value)} />\r\n              </InputGroup>\r\n              { isLoading === false ? \r\n                    <>\r\n                    {profileUser.length <= 0 ? <Button borderRadius=\"30px\" onClick={onOpen} mt=\"10px\" mr=\"20px\">New</Button> : \r\n                    <Menu>\r\n                    <MenuButton\r\n                      as={Button}\r\n                      rounded={'full'}\r\n                      variant={'link'}\r\n                      cursor={'pointer'}\r\n                      mr={'15px'}\r\n                      minW={0}>\r\n                    <Avatar size='md' name={profileUser.FullName} margin=\"5px\" crossOrigin=\"anonymous\" src={profileUser.ProfilePicture} />{' '}\r\n                    </MenuButton>\r\n                    <MenuList alignItems={'center'} borderRadius=\"20px\">\r\n                      <br />\r\n                      <Center>\r\n                        <Flex flexDirection=\"column\" >\r\n                          <Flex>\r\n                            <Text>👋Hey, {profileUser.FullName}</Text>\r\n                          </Flex>\r\n                        </Flex>\r\n                      </Center>\r\n                      <br />\r\n                      <MenuDivider />\r\n                      <a href={`/socialmedia/profile/${profileUser._id}`}>\r\n                      <MenuItem>Profile Settings</MenuItem>\r\n                      </a>\r\n                    </MenuList>\r\n                    </Menu>\r\n                    }\r\n                    </>\r\n                    :\r\n                        <Spinner mt=\"20px\" ml=\"70px\" />\r\n                    }\r\n            </Flex>\r\n\r\n                <Flex flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"center\" width=\"330px\" height=\"max-content\" borderRadius=\"20px\" shadow=\"md\" marginTop=\"15px\">\r\n                  <Flex justifyContent=\"flex-start\">\r\n                    <Text textAlign=\"left\">Suggestion For You</Text>\r\n                  </Flex>\r\n                    {profileList.slice(0, 5).map((i, index) => {\r\n                      return (\r\n                      <>\r\n                      {i.Username !== emailLog ? \r\n                      <Flex flexDirection=\"row\" justifyContent=\"space-evenly\" width=\"300px\" alignItems=\"center\" marginTop=\"10px\" key={i._id}>\r\n                          <Avatar size=\"sm\" name={i.Username} src={i.ProfilePicture} />\r\n                          <Flex flexDirection=\"column\">\r\n                            <Text width=\"130px\">{i.FullName}</Text>\r\n                            <Text fontSize='xs' textColor=\"gray.400\" width=\"120px\">{i.Username}</Text>\r\n                          </Flex>\r\n                          <Link  to={`/socialmedia/profile/${i._id}`}>\r\n                            <Text fontColor=\"purple.100\">\r\n                              View\r\n                            </Text>\r\n                          </Link>\r\n                      </Flex>\r\n                     :\r\n                     null \r\n                     }\r\n                      </>\r\n                      )\r\n                    })}    \r\n                </Flex>\r\n\r\n                <Flex flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"center\" width=\"330px\" height=\"max-content\" borderRadius=\"20px\" shadow=\"md\" marginTop=\"15px\">\r\n                    <Flex>\r\n                        <Text>Trending Post</Text>\r\n                    </Flex>                    \r\n                    { postList.length <= 0 ? null : postList.slice(0,5).filter(e => e.Likes.length > 5).map((i, index) => {\r\n                    return (\r\n                    <Flex margin=\"15px\">\r\n                        <Card shadow=\"sm\" padding=\"20px\" width=\"250px\" key={i._id}>\r\n                        <CardHeader>\r\n                            <Flex spacing='4'>\r\n                            <Flex flex='1' gap='4' alignItems='center' flexWrap='wrap'>\r\n                                <Avatar size=\"xs\" name={i.Author.FullName} src={i.Author.ProfilePicture} />\r\n                                <Box>\r\n                                <Heading size='sm'>{i.Author.FullName}</Heading>\r\n                                <Text>{moment(i.Author.createdAt).format('MMMM Do YYYY')}</Text>\r\n                                </Box>\r\n                            </Flex>\r\n                            </Flex>\r\n                        </CardHeader>\r\n                        <Link to={`/socialmedia/${i._id}`}>\r\n                          <CardBody>\r\n                          <video src={i.Documents + \"#t=10\"}></video>\r\n                          {/* <Text>{parse(i.Content)}</Text> */}\r\n                          </CardBody>\r\n                        </Link>\r\n                        <CardFooter\r\n                          justify='space-between'\r\n                          flexWrap='wrap'\r\n                        >\r\n                        { i.Likes?.length  ?\r\n                          <Button key={index} flex='1' variant='ghost' rightIcon={<AiOutlineLike />} leftIcon={`${Object.keys(i.Likes).length}`}>Like</Button>\r\n                        :\r\n                        null\r\n                        }\r\n                        </CardFooter>\r\n                        </Card>\r\n                    </Flex>\r\n                    )})}\r\n                </Flex>\r\n            </Flex>\r\n\r\n        </Flex>\r\n    </>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default SocialMedia"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","navigate","useNavigate","ProfileSosmed","profileSosmed","setProfileSosmed","PostSosmed","postSosmed","setPostSosmed","useState","profileUser","setProfileUser","profileList","setProfileList","postList","setPostList","image","setImage","imagePost","setImagePost","isLoading","setIsLoading","currentID","setCurrentID","search","setSearch","likeCount","setLikeCount","text","setText","postID","setPostID","value","setValue","isSaving","setIsSaving","isSavingProfile","setIsSavingProfile","onOpen","onClose","isOpenPostModal","onOpenPostModal","onClosePostModal","isOpenAlertDialog","onOpenAlertDialog","onCloseAlertDialog","isOpenCommentDialog","onOpenCommentDialog","onCloseCommentDialog","cancelRef","React","initialRef","finalRef","useEffect","process","response","data","loggedIn","email","replace","withCredentials","request","userExpire2","createProfile","e","preventDefault","formData","FormData","append","fullName","profilePicture","bio","fetch","method","body","reload","submitPost","documents","_id","alert","submitComment","Text","PostedBy","leastDestructiveRef","ref","colorScheme","filter","val","closeOnOverlayClick","onSubmit","pb","isRequired","disabled","onChange","type","name","event","target","files","URL","createObjectURL","alt","loadingText","spinnerPlacement","mr","initialFocusRef","finalFocusRef","placeholder","username","Bio","i","index","Comments","x","paddingLeft","defaultValue","className","width","height","margin","borderRadius","pointerEvents","backgroundColor","textColor","length","gap","FullName","crossOrigin","ProfilePicture","padding","divider","textTransform","Author","toLowerCase","includes","flexWrap","moment","createdAt","format","to","Username","Title","Documents","controls","paddingTop","mb","parse","Content","Likes","rightIcon","leftIcon","Object","keys","id","max","slice","fontColor"],"sourceRoot":""}