{"version":3,"file":"static/js/831.95f98eeb.chunk.js","mappings":"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","sources":["Component/Appbar/Appbar.tsx","Component/VendorRegistration/HistoryDetail.js","Helper/VendorRegistrationProvider.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Link,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Center,\r\n  Button\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n  SettingsIcon\r\n} from '@chakra-ui/icons';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Appbar() {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n \r\n  const {emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n\r\n  const showToastSucces = () => {\r\n    toast.success('Logging out', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n \r\n\r\n  const logout = () => {\r\n    Axios.get('https://bsi-portal-service-production.up.railway.app/logout').then(() => {\r\n    })\r\n    showToastSucces();\r\n    setTimeout(() => window.location.assign(\"https://bsi-portal-supplier.netlify.app\"), 1000);\r\n  }\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        p={5}\r\n        shadow='md'\r\n        align={'center'}>\r\n\r\n       <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            marginLeft={3}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <a href=\"/home\">\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            fontWeight={'500'}\r\n            color={useColorModeValue('gray.600', 'gray.200')}\r\n            >\r\n           BSI Supplier Portal\r\n          </Text>\r\n          </a>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} flex={{base : 1}} ml={10} justify=\"flex-end\" justifyContent={'flex-end'}>\r\n            <DesktopNav />\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}\r\n          marginLeft={5}>\r\n          {/* <IconButton\r\n            aria-label=''\r\n            colorScheme=\"gray\"\r\n            onClick={logout}\r\n            icon={<IoLogOutSharp />}\r\n          /> */}\r\n         <Menu>\r\n                <MenuButton\r\n                  as={Button}\r\n                  rounded={'full'}\r\n                  variant={'link'}\r\n                  cursor={'pointer'}\r\n                  minW={0}>\r\n                <IconButton aria-label='btn-Logout' variant={'ghost'}>  \r\n                  <SettingsIcon />\r\n                </IconButton>\r\n                </MenuButton>\r\n                <MenuList alignItems={'center'}>\r\n                  <br />\r\n                  <Center>\r\n                    <Avatar\r\n                      size={'md'}\r\n                      src={'https://avatars.dicebear.com/api/male/username.svg'}\r\n                    />\r\n                  </Center>\r\n                  <br />\r\n                  <Center>\r\n                    <Flex flexDirection=\"column\" >\r\n                      <Flex>\r\n                        <Text>{emailLog}</Text><br></br>\r\n                      </Flex>\r\n                      <Flex justifyContent=\"center\">\r\n                        <Text>{roleUser}</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Center>\r\n                  <br />\r\n                  <MenuDivider />\r\n                  <a>\r\n                  <MenuItem>Account Settings</MenuItem>\r\n                  </a>\r\n                  {roleUser === \"Admin\" ?\r\n                  <a href='/admin/dashboard'>\r\n                  <MenuItem>Dashboard</MenuItem>\r\n                  </a>\r\n                  :\r\n                  null\r\n                  }\r\n                  <a onClick={logout}>\r\n                  <MenuItem>Logout</MenuItem>\r\n                  </a>\r\n\r\n                </MenuList>\r\n              </Menu>\r\n        </Stack>\r\n      </Flex>\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={10}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                href={navItem.href ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                borderBottom=\"2px\"\r\n                borderBottomColor={'blue.300'}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  return (\r\n    <Link\r\n      href={href}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      >\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        href={href ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} href={child.href}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\ninterface NavItem {\r\n  label: string;\r\n  subLabel?: string;\r\n  children?: Array<NavItem>;\r\n  href?: string;\r\n}\r\n\r\nconst NAV_ITEMS: Array<NavItem> = [\r\n  {\r\n    label: 'Procurenment',\r\n    children: [\r\n      {\r\n        label: 'Vendor Registration',\r\n        subLabel: 'Vendor Registration',\r\n        href: '/registrationhistory'\r\n      },\r\n      {\r\n        label: 'Sourcing',\r\n        subLabel: 'Sourcing',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'PO Management',\r\n        subLabel: 'PO Management',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Delivery Monitoring',\r\n        subLabel: 'Delivery Monitoring',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Invoice Gateway',\r\n        subLabel: 'Invoice Gateway ( PayG )',\r\n        href: '/paygHome',\r\n      },\r\n      {\r\n        label: 'Outsourcing Portal',\r\n        subLabel: 'Outsourcing Portal',\r\n        href: '/outsourcing',\r\n      }\r\n\r\n    ],\r\n  },\r\n  {\r\n    label: 'Communication',\r\n    children: [\r\n      {\r\n        label: 'Live Chat',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/livechat',\r\n      },\r\n      {\r\n        label: 'Social Media',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '/socialmedia/home',\r\n      },\r\n      {\r\n        label: 'Group Forum',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    label: 'Information',\r\n    children: [\r\n      {\r\n        label: 'News and Announcement',\r\n        subLabel: 'Find your dream design job',\r\n        href: '/news',\r\n      },\r\n      {\r\n        label: 'Procurement Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Procurement Principles',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Concern About Improper Conduct',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'User Guidance',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Others Dashboard',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      },\r\n      {\r\n        label: 'Tax Matters',\r\n        subLabel: 'An exclusive list for contract work',\r\n        href: '#',\r\n      }\r\n    ],\r\n  }\r\n];","import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { EmailUser } from '../../Helper/EmailUserProvider';\r\nimport { RoleUser } from '../../Helper/RoleUserProvider';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { VendorRegistration } from '../../Helper/VendorRegistrationProvider';\r\nimport Appbar from '../Appbar/Appbar.tsx';\r\nimport moment from 'moment';\r\nimport emailjs from '@emailjs/browser';\r\nimport jsPDF from \"jspdf\";\r\nimport { \r\n  Flex,\r\n  Button, \r\n  Select,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Spinner,\r\n  Textarea,\r\n  FormHelperText\r\n} from '@chakra-ui/react';\r\nimport './HistoryDetail.css';\r\nimport PTBSI from '../../Images/LogoPTBSI.png';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst HistoryDetail = () => {\r\n  \r\n  Axios.defaults.withCredentials = true;\r\n  \r\n\r\n  let navigate = useNavigate();\r\n  \r\n  const { id } = useParams();\r\n  const { emailLog, setEmailLog } = useContext(EmailUser);\r\n  const { roleUser, setRoleUser } = useContext(RoleUser);\r\n  const { vendorRegistration, setVendorRegistration } = useContext(VendorRegistration);\r\n  const [ vendorRegistrationDataID, setVendorRegistrationDataID ] = useState([]);\r\n  const [ isLoading, setIsLoading ] = useState(true);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [ isSubmitting, setIsSubmitting ] = useState(true);\r\n\r\n  const { \r\n    isOpen: isOpenSubmitModal, \r\n    onOpen: onOpenSubmitModal, \r\n    onClose: onCloseSubmitModal \r\n  } = useDisclosure()\r\n\r\n  const initialRef = React.useRef(null)\r\n  const finalRef = React.useRef(null)\r\n\r\n  const form = useRef();\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('service_uf8ralj', 'template_jhnmlkr', form.current, 'DCCW1cqbNXXvZktbW')\r\n      .then((result) => {\r\n        setTimeout(()=> navigate(\"/home\"), 2000);\r\n      }, (error) => {\r\n        console.log(error.text);\r\n      });\r\n  };\r\n\r\n\r\n  const pdfRef = useRef(null);\r\n  const handleDownload = () => {\r\n    const content = pdfRef.current;\r\n    const doc = new jsPDF(\"p\", \"px\" , \"b1\");\r\n      doc.html(content,  {\r\n      callback: function (doc) {\r\n      doc.save('Document.pdf');\r\n      }\r\n    });\r\n  };\r\n\r\n  const showToastUpdate = () => {\r\n    toast.success('Data Updated!', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n  const showToastSubmit = () => {\r\n    toast.success('Data Submitted!', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n  const showToastStatus = () => {\r\n    toast.success('Status Updated!', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"light\",\r\n      });\r\n  }\r\n\r\n\r\n  const updatevendorRegistration = (id, CompanyName, Address, PhoneNumber, PresidentName, AccountManagerEmail, AccountManagerPhone,\r\n    PICEmail, PICPhone, EstablishedDate, EmployeeNumber, NumberOfCustomer, Attachments, SKAny, SKValid, NPWPAny, NPWPValid,\r\n    SIUPAny, SIUPValid, TDPAny, TDPValid, DomisiliAny, DomisiliValid, SPKPAny, SPKPValid, AuditAny, AuditValid, TaxAny, TaxValid, BankAny, BankValid ) => {\r\n    Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/vendor/update`, {\r\n      cName           : vendorRegistration.newCName? vendorRegistration.newCName : CompanyName , \r\n      Address         : vendorRegistration.newAddress? vendorRegistration.newAddress : Address,\r\n      phoneNumber     : vendorRegistration.newPhoneNumber? vendorRegistration.newPhoneNumber : PhoneNumber,\r\n      presidentName   : vendorRegistration.newPresidentName? vendorRegistration.newPresidentName : PresidentName,\r\n      managerEmail    : vendorRegistration.newManagerEmail? vendorRegistration.newManagerEmail : AccountManagerEmail , \r\n      managerPhone    : vendorRegistration.newManagerPhone? vendorRegistration.newManagerPhone : AccountManagerPhone , \r\n      picEmail        : vendorRegistration.newPICEmail? vendorRegistration.newPICEmail : PICEmail , \r\n      picPhone        : vendorRegistration.newPICPhoneNumber? vendorRegistration.newPICPhoneNumber : PICPhone , \r\n      date            : vendorRegistration.newDate? vendorRegistration.newDate : EstablishedDate , \r\n      employeeNumber  : vendorRegistration.newEmployeeNumber? vendorRegistration.newEmployeeNumber : EmployeeNumber , \r\n      numberOfCustomer: vendorRegistration.newNumberOfCustomer? vendorRegistration.newNumberOfCustomer : NumberOfCustomer ,\r\n      myFile          : vendorRegistration.newMyFile? vendorRegistration.newMyFile : Attachments ,\r\n      skAny           : vendorRegistration.newSKAny? vendorRegistration.newSKAny : SKAny,\r\n      skValid         : vendorRegistration.newSKValid? vendorRegistration.newSKValid : SKValid,\r\n      npwpAny         : vendorRegistration.newNPWPAny? vendorRegistration.newNPWPAny : NPWPAny,\r\n      npwpValid       : vendorRegistration.newNPWPValid? vendorRegistration.newNPWPValid : NPWPValid,\r\n      siupAny         : vendorRegistration.newSIUPAny? vendorRegistration.newSIUPAny : SIUPAny,\r\n      siupValid       : vendorRegistration.newSIUPValid? vendorRegistration.newSIUPValid : SIUPValid,\r\n      tdpAny          : vendorRegistration.newTDPAny? vendorRegistration.newTDPAny : TDPAny,\r\n      tdpValid        : vendorRegistration.newTDPValid? vendorRegistration.newTDPValid : TDPValid,\r\n      domisiliAny     : vendorRegistration.newDomisiliAny? vendorRegistration.newDomisiliAny : DomisiliAny,\r\n      domisiliValid   : vendorRegistration.newDomisiliValid? vendorRegistration.newDomisiliValid : DomisiliValid,\r\n      spkpAny         : vendorRegistration.newSPKPAny? vendorRegistration.newSPKPAny : SPKPAny,\r\n      spkpValid       : vendorRegistration.newSPKPValid? vendorRegistration.newSPKPValid: SPKPValid,\r\n      auditAny        : vendorRegistration.newAuditAny? vendorRegistration.newAuditAny : AuditAny,\r\n      auditValid      : vendorRegistration.newAuditValid? vendorRegistration.newAuditValid : AuditValid,\r\n      taxAny          : vendorRegistration.newTaxAny? vendorRegistration.newTaxAny : TaxAny,\r\n      taxValid        : vendorRegistration.newTaxValid? vendorRegistration.newTaxValid: TaxValid,\r\n      bankAny         : vendorRegistration.newBankAny? vendorRegistration.newBankAny : BankAny,\r\n      bankValid       : vendorRegistration.newBankValid? vendorRegistration.newBankValid : BankValid,\r\n      id : id\r\n    }).then((response)=> {\r\n      setTimeout(() => window.location.reload(false), 1000);\r\n      showToastUpdate();\r\n    });\r\n  };\r\n\r\n  const updateStatus = (id, Status, e) => {\r\n    Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/vendor/update/status` , {\r\n      status: e.target.value, \r\n      id : id\r\n    }).then(() => {\r\n      fetch(`${process.env.REACT_APP_MY_ENV_VAL}/sendNotification`, {\r\n        method: \"POST\",\r\n        headers : {\r\n        \"Content-type\" : \"application/json\",\r\n        }\r\n      });\r\n      setTimeout(() => window.location.reload(false), 1000);\r\n      showToastStatus();\r\n    });\r\n  };\r\n\r\n  const updateSubmitted = (id, e) => {\r\n    Axios.put(`${process.env.REACT_APP_MY_ENV_VAL}/vendor/update/submitted`, {\r\n      submitted: e.target.name, \r\n      id : id\r\n    }).then((response)=> {\r\n      showToastSubmit();\r\n      setIsSubmitting(false);\r\n      setTimeout(() => window.location.reload(false), 1000);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    async function userExpire2 () {\r\n      const request = await  Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/login`)\r\n      .then((response)=> {\r\n        if(response.data.loggedIn === true) {\r\n          setEmailLog(response.data.email);\r\n          setRoleUser(response.data.role);\r\n        } else {\r\n          navigate(\"/\", {replace : true})\r\n        }\r\n      }, {withCredentials : true});\r\n      return request;\r\n    }\r\n    userExpire2();\r\n   }, [emailLog])\r\n\r\n  useEffect(() => {\r\n\r\n    const cancelToken = Axios.CancelToken.source();\r\n  \r\n    Axios.get(`${process.env.REACT_APP_MY_ENV_VAL}/vendor/registration/${id}`, {\r\n      cancelToken : cancelToken.token,\r\n    }).then((response) => {\r\n        setVendorRegistrationDataID(response.data);\r\n        setIsLoading(false);\r\n    }).catch((err) => {\r\n      if (Axios.isCancel(err)){\r\n        console.log(\"canceled\");\r\n      } else {\r\n        console.log(\"not canceled\")\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      cancelToken.cancel();\r\n    }   \r\n  }, [id])\r\n\r\n  return (\r\n    <>\r\n    <ToastContainer />\r\n    {isLoading === false ? \r\n    <div>\r\n    <Appbar />\r\n    <div className='btn-container'>\r\n    <Button style={{backgroundColor : \" #DFF6FF\", color : \"black\", width: \"120px\"}} variant=\"contained\" onClick={handleDownload}>Download</Button>\r\n    \r\n    { roleUser === \"Admin\" \r\n      ? null\r\n      : <>\r\n        { vendorRegistrationDataID.submitted === \"Submitted\" && vendorRegistrationDataID.status != \"\"\r\n          ? null\r\n          : <Button style={{marginLeft : \"20px\", backgroundColor : \" #DFF6FF\", color : \"black\", width: \"120px\"}} variant=\"contained\" onClick={onOpen}>Edit</Button>\r\n        }\r\n        </>\r\n    }\r\n\r\n    { roleUser === \"Admin\" \r\n      ? null\r\n      : <>\r\n        { vendorRegistrationDataID.submitted === \"Submitted\"\r\n          ? null\r\n          : <Button style={{marginLeft : \"20px\", backgroundColor : \" #DFF6FF\", color : \"black\", width: \"120px\"}} variant=\"contained\" onClick={onOpenSubmitModal}>Submit</Button>\r\n        }\r\n        </>\r\n    }\r\n\r\n    </div>\r\n\r\n    <div className='wrapperWrapper'>\r\n      <div ref={pdfRef}>\r\n        <div className='headerMonitoring'>\r\n          <div className='header-item header-item-1'>\r\n            {/* <img src={PTBSI} alt=\"logo bsi\" /> */}\r\n          </div>\r\n          <div className='header-item header-item-2'>\r\n          {/* <img src={PTBSI} alt=\"logo bsi\" /> */}\r\n          </div>\r\n        </div>\r\n\r\n      \r\n\r\n      <div className='flexbox-container'>\r\n        <div className='flexbox-item flexbox-item-1'>\r\n          \r\n          <div className=\"leftDiv\">\r\n            <h2 className='textSupplier'>Supplier Data</h2>\r\n              <div className='textData'>\r\n                <p>Company Name : {vendorRegistrationDataID.CompanyName}</p>\r\n                <p>Address: {vendorRegistrationDataID.Address}</p>\r\n                <p>Phone Number : {vendorRegistrationDataID.PhoneNumber}</p>\r\n                <p>President Director (Name) : {vendorRegistrationDataID.PresidentName}</p>\r\n                <p>Account Manager (Email / Phone) : {vendorRegistrationDataID.ManagerEmail} / {vendorRegistrationDataID.ManagerPhone}</p> \r\n                <p>Escalation PIC (Email / Phone) : {vendorRegistrationDataID.PICEmail} / {vendorRegistrationDataID.PICPhone}</p> \r\n                <p>Established Date :   {moment(vendorRegistrationDataID.EstablishedDate).format(\"DD MMMM YYYY\")} </p>\r\n                <p>Main Business : {vendorRegistrationDataID.ChoiceBusiness}</p>\r\n                <p>Employee Number : {vendorRegistrationDataID.EmployeeNumber}</p>\r\n                <p>Number of Customer : {vendorRegistrationDataID.NumberOfCustomer}</p>\r\n                <p>Attachments : {vendorRegistrationDataID.Attachments}</p>\r\n              </div>\r\n          </div>     \r\n        </div>\r\n        \r\n        <div className='flexbox-item flexbox-item-2'>\r\n          <h2 className='textSupplier'>Document </h2>\r\n          <div className=\"header_fixed\">\r\n            <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Document</th>\r\n                <th>Any / Not</th>        \r\n                <th>Valid / Invalid</th>  \r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"tableBody\">\r\n              <tr>\r\n                <td>SK Menhum & Akta Notaris</td>       \r\n                <td>{vendorRegistrationDataID.SKAny}</td>   \r\n                <td>{vendorRegistrationDataID.SKValid}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>NPWP</td>       \r\n                <td>{vendorRegistrationDataID.NPWPAny}</td>   \r\n                <td>{vendorRegistrationDataID.NPWPValid}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>SIUP</td>       \r\n                <td>{vendorRegistrationDataID.SIUPAny}</td>   \r\n                <td>{vendorRegistrationDataID.SIUPValid}</td>\r\n              </tr> \r\n              <tr>\r\n                <td>TDP</td>       \r\n                <td>{vendorRegistrationDataID.TDPAny}</td>   \r\n                <td>{vendorRegistrationDataID.TDPValid}</td>\r\n              </tr> \r\n              <tr>\r\n                <td>Surat Domisili</td>       \r\n                <td>{vendorRegistrationDataID.DomisiliAny}</td>   \r\n                <td>{vendorRegistrationDataID.DomisiliValid}</td>\r\n              </tr> \r\n              <tr>\r\n                <td>SPKP</td>       \r\n                <td>{vendorRegistrationDataID.SPKPAny}</td>   \r\n                <td>{vendorRegistrationDataID.SPKPValid}</td>\r\n              </tr> \r\n              <tr>\r\n                <td>Latest Financial Report ( Audit )</td>       \r\n                <td>{vendorRegistrationDataID.AuditAny}</td>   \r\n                <td>{vendorRegistrationDataID.AuditValid}</td>\r\n              </tr> \r\n              <tr>\r\n                <td>Tax Report</td>       \r\n                <td>{vendorRegistrationDataID.TaxAny}</td>   \r\n                <td>{vendorRegistrationDataID.TaxValid}</td>\r\n              </tr> \r\n              <tr>\r\n                <td>Bank Account</td>       \r\n                <td>{vendorRegistrationDataID.BankAny}</td>   \r\n                <td>{vendorRegistrationDataID.BankValid}</td>\r\n              </tr>    \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n      <div>\r\n      <div className='flexbox-container-2'>\r\n        <div className='item-2 flexbox-item-3'>\r\n          <h2 className='textSupplier'>Statement Condition</h2>\r\n          <p style={{textAlign : \"justify\"}}>\r\n            I who undersign below is the authorized party of the company to perform legal action to represent the company on conducting its business.\r\n            Our company shall not give any gift in any other form to the parties represents PT. Berlian Sistem Informasi on conducting business transaction with our company.\r\n            If on the future it is found that we breach our obligation as stated on point 2 of this letter, we are ready to accept any legal consequences that will be coming.  \r\n          </p>\r\n          <p style={{textAlign : \"right\", marginBottom : \"20px\"}}>\r\n            Sign And Stamp\r\n          </p>\r\n          <div>\r\n          {vendorRegistrationDataID.status == \"Approved\" ? \r\n            <div className='textStatusApprove'>\r\n             <p>{vendorRegistrationDataID.status}</p>\r\n            </div>\r\n            :\r\n            <>\r\n            {vendorRegistrationDataID.status == \"Rejected\" ?\r\n            <div className='textStatusReject'>\r\n             <p>{vendorRegistrationDataID.status}</p>\r\n            </div>\r\n            :\r\n            <div></div>\r\n            }\r\n            </>\r\n            }\r\n            <div style={{textAlign : \"right\"}}>\r\n              <p>{vendorRegistrationDataID.PresidentName}</p>\r\n              <p>President Director</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>   \r\n    </div>\r\n      \r\n   \r\n      \r\n\r\n      {roleUser === \"Admin\" ? \r\n      <>\r\n        { vendorRegistrationDataID.status === \"\" || vendorRegistrationDataID.status == null  && vendorRegistrationDataID.submitted === \"Submitted\" ?\r\n           <div className='btnStatus'>\r\n            <div className='btnStatus-item-1'>\r\n              <Button style={{backgroundColor : \"#367E18\", color : \"white\", width : \"100px\"}} name=\"status\" value=\"Approved\" variant='contained'  onClick={(e)=> {\r\n                updateStatus(vendorRegistrationDataID._id, vendorRegistrationDataID.Status, e)}}>\r\n                Approve \r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <Button style={{backgroundColor : \"#FF1E00\", color : \"white\", width : \"100px\"}} name=\"status\" value=\"Rejected\" variant='contained' onClick={(e)=> {\r\n                updateStatus(vendorRegistrationDataID._id, vendorRegistrationDataID.Status, e)}}>\r\n                Reject\r\n              </Button>\r\n            </div>\r\n           </div>\r\n           :\r\n           null\r\n        }\r\n      </>\r\n      :\r\n      null\r\n      }\r\n    </div>\r\n\r\n      <>\r\n      <div>\r\n      <Modal\r\n        initialFocusRef={initialRef}\r\n        finalFocusRef={finalRef}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n      >\r\n          <ModalOverlay />\r\n            <ModalContent marginLeft=\"6px\">\r\n              <ModalHeader>Edit Supplier Data</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n              <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n             \r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>CompanyName</FormLabel>\r\n                <Input className=\"inputVendor\" type='text' name=\"CompanyName\" value={vendorRegistration.newCName? vendorRegistration.newCName : vendorRegistrationDataID.CompanyName} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newCName : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Address</FormLabel>\r\n                <Input className=\"inputVendor\" type='text' name=\"Address\" value={vendorRegistration.newAddress?  vendorRegistration.newAddress : vendorRegistrationDataID.Address} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newAddress : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Phone Number</FormLabel>\r\n                <Input className=\"inputVendor\" type='tel' name=\"Phone\" value={vendorRegistration.newPhoneNumber?  vendorRegistration.newPhoneNumber: vendorRegistrationDataID.PhoneNumber} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newPhoneNumber : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>President Director Name</FormLabel>\r\n                <Input className=\"inputVendor\" type='text' name=\"PresidentName\" value={vendorRegistration.newPresidentName?  vendorRegistration.newPresidentName : vendorRegistrationDataID.PresidentName} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newPresidentName : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Manager Email</FormLabel>\r\n                <Input className=\"inputVendor\" type='email' name=\"ManagerEmail\" value={vendorRegistration.newManagerEmail?  vendorRegistration.newManagerEmail : vendorRegistrationDataID.ManagerEmail} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newManagerEmail : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Manager Phone</FormLabel>\r\n                <Input className=\"inputVendor\" type='tel' name=\"ManagerPhone\" value={vendorRegistration.newManagerPhone?  vendorRegistration.newManagerPhone : vendorRegistrationDataID.ManagerPhone} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newManagerPhone : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>PIC Email</FormLabel>\r\n                <Input className=\"inputVendor\" type='email' name=\"PICEmail\"  value={vendorRegistration.newPICEmail?  vendorRegistration.newPICEmail : vendorRegistrationDataID.PICEmail} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newPICEmail : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>PIC Phone</FormLabel>\r\n                <Input className=\"inputVendor\" type='tel' name=\"PICPhone\" value={vendorRegistration.newPICPhoneNumber?  vendorRegistration.newPICPhone : vendorRegistrationDataID.PICPhone} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newPICPhoneNumber : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Established Date</FormLabel>\r\n                <Input className=\"inputVendor\" type='date' name=\"EstablishedDate\" value={vendorRegistration.newDate?  vendorRegistration.newDate : vendorRegistrationDataID.EstablishedDate} onChange={(event) => {\r\n                  setVendorRegistration({...vendorRegistration, newDate : event.target.value})\r\n                }} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Employee Number</FormLabel>\r\n                <Select className=\"inputVendor\" name='EmployeeNumber' onChange={(e) => {\r\n                  setVendorRegistration({...vendorRegistration, newEmployeeNumber : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Employee Number...</option>\r\n                    <option value=\"1-50\">1-50</option>\r\n                    <option value=\"51-100\">51-100</option>\r\n                    <option value=\"101-250\">101-250</option>\r\n                    <option value=\"251-500\">251-500</option>\r\n                    <option value=\"500+\">500+</option>\r\n                </Select>\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"15px\">\r\n              <FormControl isRequired>\r\n                <FormLabel>Number of Customer</FormLabel>\r\n                <Input className=\"inputVendor\" type='text' name=\"NumberOfCustomer\" value={vendorRegistration.newNumberOfCustomer? vendorRegistration.newNumberOfCustomer : vendorRegistrationDataID.NumberOfCustomer} onChange={(e) => {\r\n                  setVendorRegistration({...vendorRegistration, newNumberOfCustomer : e.target.value})}} />\r\n              </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>SK Menhum</FormLabel>\r\n                  <Select className=\"inputVendor\" onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newSKAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newSKValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>NPWP</FormLabel>\r\n                  <Select className=\"inputVendor\" name='NPWPAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newNPWPAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='NPWPValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newNPWPValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>SIUP</FormLabel>\r\n                  <Select className=\"inputVendor\" name='SIUPAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newSIUPAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='SIUPAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newSIUPValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>TDP</FormLabel>\r\n                  <Select className=\"inputVendor\" name='TDPAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newTDPAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='TDPValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newTDPValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>Surat Domisili</FormLabel>\r\n                  <Select className=\"inputVendor\" name='DomisiliAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newDomisiliAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='DomisiliValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newDomisiliValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>SPKP</FormLabel>\r\n                  <Select className=\"inputVendor\" name='SPKPAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newSPKPAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='SPKPValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newSPKPValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>Latest Financial Report</FormLabel>\r\n                  <Select className=\"inputVendor\" name='AuditAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newAuditAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='AuditValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newAuditValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>Tax Report</FormLabel>\r\n                  <Select className=\"inputVendor\" name='TaxAny'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newTaxAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='TaxValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newTaxValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>Bank Account</FormLabel>\r\n                  <Select className=\"inputVendor\" name='BankAny'  onChange={(e) => {\r\n                    setVendorRegistrationDataID({...vendorRegistration, newBankAny : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Any / Not</option>\r\n                    <option value=\"Any\">Any</option>\r\n                    <option value=\"Not\">Not</option>\r\n                  </Select>\r\n\r\n                  <Select className=\"inputVendor\" marginTop=\"15px\" name='BankValid'  onChange={(e) => {\r\n                    setVendorRegistration({...vendorRegistration, newBankValid : e.target.value})}}>\r\n                    <option value=\"\" disabled selected hidden>Choose Valid / Invalid</option>\r\n                    <option value=\"Valid\">Valid</option>\r\n                    <option value=\"Invalid\">Invalid</option>\r\n                  </Select>\r\n                </FormControl>\r\n              </Flex>\r\n              </Flex>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button colorScheme='blue' mr={3} onClick={()=> {updatevendorRegistration(\r\n                vendorRegistrationDataID._id, vendorRegistrationDataID.CompanyName, vendorRegistrationDataID.Address, vendorRegistrationDataID.PhoneNumber, vendorRegistrationDataID.PresidentName, vendorRegistrationDataID.ManagerEmail, \r\n                vendorRegistrationDataID.ManagerPhone, vendorRegistrationDataID.PICEmail, vendorRegistrationDataID.PICPhone, vendorRegistrationDataID.EstablishedDate,  vendorRegistrationDataID.EmployeeNumber, vendorRegistrationDataID.NumberOfCustomer, vendorRegistrationDataID.Attachments,\r\n                vendorRegistrationDataID.SKAny, vendorRegistrationDataID.SKValid, vendorRegistrationDataID.NPWPAny, vendorRegistrationDataID.NPWPValid, vendorRegistrationDataID.SIUPAny, vendorRegistrationDataID.SIUPValid, vendorRegistrationDataID.TDPAny, vendorRegistrationDataID.TDPValid, vendorRegistrationDataID.DomisiliAny, vendorRegistrationDataID.DomisiliValid,\r\n                vendorRegistrationDataID.SPKPAny, vendorRegistrationDataID.SPKPValid, vendorRegistrationDataID.AuditAny, vendorRegistrationDataID.AuditValid, vendorRegistrationDataID.TaxAny, vendorRegistrationDataID.TaxValid, vendorRegistrationDataID.BankAny, vendorRegistrationDataID.BankValid\r\n                )}}>\r\n                  Save\r\n                </Button>\r\n                <Button onClick={onClose}>Cancel</Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n      </Modal>\r\n      </div>\r\n  \r\n           <Modal\r\n            isOpen={isOpenSubmitModal}\r\n            onClose={onCloseSubmitModal}\r\n            >\r\n            <ModalOverlay />\r\n            <form ref={form} onSubmit={sendEmail}>\r\n            <ModalContent>\r\n              <ModalHeader>Send an Email</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n              <Flex marginTop=\"20px\">\r\n                <FormControl isRequired>\r\n                  <FormLabel>To Email</FormLabel>\r\n                  <Input type=\"email\" name=\"user_email\" />\r\n                    \r\n                  <FormLabel>Message</FormLabel>\r\n                  <Textarea name=\"message\" />\r\n                  <FormHelperText><i>Please write your credentials here</i></FormHelperText>\r\n                </FormControl>\r\n              </Flex>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                { isSubmitting === true ? \r\n                <Button type=\"submit\" width=\"130px\" name=\"Submitted\" value=\"Submit\" colorScheme='blue' mr={3} onClick={(e) => {\r\n                  updateSubmitted(vendorRegistrationDataID._id, e)\r\n                }}>\r\n                Submit\r\n                </Button>\r\n                :\r\n                <Button\r\n                  isLoading\r\n                  loadingText='Submitting'\r\n                  colorScheme='blue'\r\n                  variant='outline'\r\n                  width={\"130px\"}\r\n                  mr={3}\r\n                  marginLeft={\"1px\"}\r\n                  >\r\n                  Saving\r\n                </Button>\r\n                }\r\n                <Button width=\"130px\" onClick={onCloseSubmitModal}>Cancel</Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </form>\r\n          </Modal>\r\n          </>\r\n  </div>\r\n  :\r\n  <Flex justifyContent=\"center\" alignItems=\"center\" marginTop=\"30px\">\r\n    <Spinner />\r\n  </Flex>\r\n  }\r\n  </>\r\n  )\r\n}\r\n\r\nexport default HistoryDetail","import React from 'react';\r\nimport { createContext, useState } from \"react\"\r\nexport const VendorRegistration = createContext();\r\nexport default function UserDataProvider({ children }) {\r\n    const [ vendorRegistration , setVendorRegistration ] = useState({\r\n        cName : \"\",\r\n        Address : \"\",\r\n        phoneNumber : \"\",\r\n        presidentName : \"\",\r\n        managerEmail : \"\",\r\n        managerPhone : \"\",\r\n        picEmail : \"\",\r\n        picPhone : \"\",\r\n        date: \"\",\r\n        mainBusiness : [],\r\n        employeeNumber : \"\",\r\n        numberOfCustomer : \"\",\r\n        fileVendor : [],\r\n\r\n\r\n        skAny : \"\",\r\n        skValid:  \"\",\r\n\r\n        npwpAny : \"\",\r\n        npwpValid : \"\",\r\n\r\n        siupAny : \"\",\r\n        siupValid : \"\",\r\n\r\n        tdpAny : \"\",\r\n        tdpValid : \"\",\r\n\r\n        domisiliAny : \"\",\r\n        domisiliValid : \"\",\r\n\r\n        spkpAny : \"\",\r\n        spkpValid : \"\",\r\n\r\n        auditAny : \"\",\r\n        auditValid : \"\",\r\n\r\n        taxAny : \"\",\r\n        taxValid : \"\",\r\n\r\n        bankAny : \"\",\r\n        bankValid : \"\",\r\n\r\n        newCName : \"\",\r\n        newAddress : \"\",\r\n        newPhoneNumber : \"\",\r\n        newPresidentName : \"\",\r\n        newManagerEmail : \"\",\r\n        newManagerPhone : \"\",\r\n        newPICEmail : \"\",\r\n        newPICPhoneNumber : \"\",\r\n        newDate : \"\",\r\n        newMainBusiness : \"\",\r\n        newEmployeeNumber : \"\",\r\n        newNumberOfCustomer : \"\",\r\n        newFileVendor : \"\",\r\n\r\n        newSKAny : \"\",\r\n        newSKValid:  \"\",\r\n\r\n        newNPWPAny : \"\",\r\n        newNPWPValid : \"\",\r\n\r\n        newSIUPAny : \"\",\r\n        newSIUPValid : \"\",\r\n\r\n        newTDPAny : \"\",\r\n        newTDPValid : \"\",\r\n\r\n        newDomisiliAny : \"\",\r\n        newDomisiliValid : \"\",\r\n\r\n        newSPKPAny : \"\",\r\n        newSPKPValid : \"\",\r\n\r\n        newAuditAny : \"\",\r\n        newAuditValid : \"\",\r\n\r\n        newTaxAny : \"\",\r\n        newTaxValid : \"\",\r\n\r\n        newBankAny : \"\",\r\n        newBankValid : \"\",\r\n\r\n        status : \"\",\r\n        submitted : \"\"\r\n      });\r\n\r\n  return (\r\n    <VendorRegistration.Provider value={{ vendorRegistration, setVendorRegistration }}>\r\n     {children}\r\n    </VendorRegistration.Provider>\r\n  );\r\n}"],"names":["Appbar","Axios","useContext","EmailUser","emailLog","setEmailLog","RoleUser","roleUser","setRoleUser","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","p","shadow","align","flex","md","ml","display","onClick","marginLeft","icon","w","h","variant","justify","href","textAlign","useBreakpointValue","fontFamily","fontWeight","justifyContent","DesktopNav","alignItems","direction","spacing","as","Button","rounded","cursor","minW","size","src","flexDirection","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","setTimeout","window","location","assign","in","animateOpacity","MobileNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","fontSize","borderBottomColor","_hover","textDecoration","label","children","border","boxShadow","child","DesktopSubNav","subLabel","role","transition","transform","opacity","_groupHover","ChevronRightIcon","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","navigate","useNavigate","id","useParams","VendorRegistration","vendorRegistration","setVendorRegistration","useState","vendorRegistrationDataID","setVendorRegistrationDataID","isLoading","setIsLoading","onOpen","onClose","isSubmitting","setIsSubmitting","isOpenSubmitModal","onOpenSubmitModal","onCloseSubmitModal","initialRef","React","finalRef","form","useRef","pdfRef","updatevendorRegistration","CompanyName","Address","PhoneNumber","PresidentName","AccountManagerEmail","AccountManagerPhone","PICEmail","PICPhone","EstablishedDate","EmployeeNumber","NumberOfCustomer","Attachments","SKAny","SKValid","NPWPAny","NPWPValid","SIUPAny","SIUPValid","TDPAny","TDPValid","DomisiliAny","DomisiliValid","SPKPAny","SPKPValid","AuditAny","AuditValid","TaxAny","TaxValid","BankAny","BankValid","process","cName","newCName","newAddress","phoneNumber","newPhoneNumber","presidentName","newPresidentName","managerEmail","newManagerEmail","managerPhone","newManagerPhone","picEmail","newPICEmail","picPhone","newPICPhoneNumber","date","newDate","employeeNumber","newEmployeeNumber","numberOfCustomer","newNumberOfCustomer","myFile","newMyFile","skAny","newSKAny","skValid","newSKValid","npwpAny","newNPWPAny","npwpValid","newNPWPValid","siupAny","newSIUPAny","siupValid","newSIUPValid","tdpAny","newTDPAny","tdpValid","newTDPValid","domisiliAny","newDomisiliAny","domisiliValid","newDomisiliValid","spkpAny","newSPKPAny","spkpValid","newSPKPValid","auditAny","newAuditAny","auditValid","newAuditValid","taxAny","newTaxAny","taxValid","newTaxValid","bankAny","newBankAny","bankValid","newBankValid","response","reload","updateStatus","Status","e","status","target","value","fetch","method","headers","updateSubmitted","submitted","name","useEffect","data","loggedIn","email","replace","withCredentials","request","userExpire2","cancelToken","token","catch","err","console","log","cancel","className","backgroundColor","width","content","current","jsPDF","html","callback","doc","save","ref","ManagerEmail","ManagerPhone","moment","format","ChoiceBusiness","marginBottom","_id","initialFocusRef","finalFocusRef","pb","isRequired","type","onChange","event","newPICPhone","disabled","selected","hidden","colorScheme","mr","onSubmit","preventDefault","emailjs","result","error","text","loadingText","createContext","UserDataProvider","mainBusiness","fileVendor","newMainBusiness","newFileVendor","Provider"],"sourceRoot":""}